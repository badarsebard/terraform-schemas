{"format_version":"0.2","provider_schemas":{"registry.terraform.io/ngrok/ngrok":{"provider":{"version":0,"block":{"attributes":{"api_base_url":{"type":"string","description":"base URL for the ngrok API. only overridden for ngrok's internal testing purposes.","description_kind":"plain","optional":true},"api_key":{"type":"string","description":"ngrok API key used for authenticating to the API","description_kind":"plain","optional":true}},"description_kind":"plain"}},"resource_schemas":{"ngrok_api_key":{"version":0,"block":{"attributes":{"description":{"type":"string","description":"human-readable description of what uses the API key to authenticate. optional, max 255 bytes.","description_kind":"plain","optional":true},"id":{"type":"string","description":"unique API key resource identifier","description_kind":"plain","optional":true,"computed":true},"metadata":{"type":"string","description":"arbitrary user-defined data of this API key. optional, max 4096 bytes","description_kind":"plain","optional":true},"token":{"type":"string","description":"the bearer token that can be placed into the Authorization header to authenticate request to the ngrok API. **This value is only available one time, on the API response from key creation. Otherwise it is null.**","description_kind":"plain","optional":true,"computed":true,"sensitive":true}},"description":"API Keys are used to authenticate to the [ngrok\n API](https://ngrok.com/docs/api#authentication). You may use the API itself\n to provision and manage API Keys but you'll need to provision your first API\n key from the [API Keys page](https://dashboard.ngrok.com/api/keys) on your\n ngrok.com dashboard.","description_kind":"plain"}},"ngrok_certificate_authority":{"version":0,"block":{"attributes":{"ca_pem":{"type":"string","description":"raw PEM of the Certificate Authority","description_kind":"plain","required":true},"description":{"type":"string","description":"human-readable description of this Certificate Authority. optional, max 255 bytes.","description_kind":"plain","optional":true},"id":{"type":"string","description":"unique identifier for this Certificate Authority","description_kind":"plain","optional":true,"computed":true},"metadata":{"type":"string","description":"arbitrary user-defined machine-readable data of this Certificate Authority. optional, max 4096 bytes.","description_kind":"plain","optional":true}},"description":"Certificate Authorities are x509 certificates that are used to sign other\n x509 certificates. Attach a Certificate Authority to the Mutual TLS module\n to verify that the TLS certificate presented by a client has been signed by\n this CA. Certificate Authorities  are used only for mTLS validation only and\n thus a private key is not included in the resource.","description_kind":"plain"}},"ngrok_credential":{"version":0,"block":{"attributes":{"acl":{"type":["list","string"],"description":"optional list of ACL rules. If unspecified, the credential will have no restrictions. The only allowed ACL rule at this time is the `bind` rule. The `bind` rule allows the caller to restrict what domains and addresses the token is allowed to bind. For example, to allow the token to open a tunnel on example.ngrok.io your ACL would include the rule `bind:example.ngrok.io`. Bind rules may specify a leading wildcard to match multiple domains with a common suffix. For example, you may specify a rule of `bind:*.example.com` which will allow `x.example.com`, `y.example.com`, `*.example.com`, etc. A rule of `'*'` is equivalent to no acl at all and will explicitly permit all actions.","description_kind":"plain","optional":true},"description":{"type":"string","description":"human-readable description of who or what will use the credential to authenticate. Optional, max 255 bytes.","description_kind":"plain","optional":true},"id":{"type":"string","description":"unique tunnel credential resource identifier","description_kind":"plain","optional":true,"computed":true},"metadata":{"type":"string","description":"arbitrary user-defined machine-readable data of this credential. Optional, max 4096 bytes.","description_kind":"plain","optional":true},"token":{"type":"string","description":"the credential's authtoken that can be used to authenticate an ngrok client. **This value is only available one time, on the API response from credential creation, otherwise it is null.**","description_kind":"plain","computed":true,"sensitive":true}},"description":"Tunnel Credentials are ngrok agent authtokens. They authorize the ngrok\n agent to connect the ngrok service as your account. They are installed with\n the `ngrok authtoken` command or by specifying it in the `ngrok.yml`\n configuration file with the `authtoken` property.","description_kind":"plain"}},"ngrok_endpoint_configuration":{"version":0,"block":{"attributes":{"description":{"type":"string","description":"human-readable description of what this endpoint configuration will be do when applied or what traffic it will be applied to. Optional, max 255 bytes","description_kind":"plain","optional":true},"id":{"type":"string","description":"unique identifier of this endpoint configuration","description_kind":"plain","optional":true,"computed":true},"metadata":{"type":"string","description":"arbitrary user-defined machine-readable data of this endpoint configuration. Optional, max 4096 bytes.","description_kind":"plain","optional":true},"type":{"type":"string","description":"they type of traffic this endpoint configuration can be applied to. one of: `http`, `https`, `tcp`","description_kind":"plain","optional":true}},"block_types":{"backend":{"nesting_mode":"set","block":{"attributes":{"enabled":{"type":"bool","description":"`true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified","description_kind":"plain","optional":true}},"block_types":{"backend":{"nesting_mode":"set","block":{"attributes":{"id":{"type":"string","description":"a resource identifier","description_kind":"plain","optional":true,"computed":true},"uri":{"type":"string","description":"a uri for locating a resource","description_kind":"plain","optional":true,"computed":true}},"description":"backend to be used to back this endpoint","description_kind":"plain"}}},"description":"backend module configuration or `null`","description_kind":"plain"}},"basic_auth":{"nesting_mode":"set","block":{"attributes":{"allow_options":{"type":"bool","description":"true or false indicating whether to allow OPTIONS requests through without authentication which is necessary for CORS. default is `false`","description_kind":"plain","optional":true},"auth_provider_id":{"type":"string","description":"determines how the basic auth credentials are validated. Currently only the value `agent` is supported which means that credentials will be validated against the username and password specified by the ngrok agent's `-auth` flag, if any.","description_kind":"plain","optional":true},"enabled":{"type":"bool","description":"`true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified","description_kind":"plain","optional":true},"realm":{"type":"string","description":"an arbitrary string to be specified in as the 'realm' value in the `WWW-Authenticate` header. default is `ngrok`","description_kind":"plain","optional":true}},"description":"basic auth module configuration or `null`","description_kind":"plain"}},"circuit_breaker":{"nesting_mode":"set","block":{"attributes":{"enabled":{"type":"bool","description":"`true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified","description_kind":"plain","optional":true},"error_threshold_percentage":{"type":"number","description":"Error threshold percentage should be between 0 - 1.0, not 0-100.0","description_kind":"plain","optional":true},"num_buckets":{"type":"number","description":"Integer number of buckets into which metrics are retained. Max 128.","description_kind":"plain","optional":true},"rolling_window":{"type":"number","description":"Integer number of seconds in the statistical rolling window that metrics are retained for.","description_kind":"plain","optional":true},"tripped_duration":{"type":"number","description":"Integer number of seconds after which the circuit is tripped to wait before re-evaluating upstream health","description_kind":"plain","optional":true},"volume_threshold":{"type":"number","description":"Integer number of requests in a rolling window that will trip the circuit. Helpful if traffic volume is low.","description_kind":"plain","optional":true}},"description":"circuit breaker module configuration or `null`","description_kind":"plain"}},"compression":{"nesting_mode":"set","block":{"attributes":{"enabled":{"type":"bool","description":"`true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified","description_kind":"plain","optional":true}},"description":"compression module configuration or `null`","description_kind":"plain"}},"ip_policy":{"nesting_mode":"set","block":{"attributes":{"enabled":{"type":"bool","description":"`true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified","description_kind":"plain","optional":true}},"block_types":{"ip_policies":{"nesting_mode":"list","block":{"attributes":{"id":{"type":"string","description":"a resource identifier","description_kind":"plain","optional":true,"computed":true},"uri":{"type":"string","description":"a uri for locating a resource","description_kind":"plain","optional":true,"computed":true}},"description_kind":"plain"}}},"description":"ip policy module configuration or `null`","description_kind":"plain"}},"logging":{"nesting_mode":"set","block":{"attributes":{"enabled":{"type":"bool","description":"`true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified","description_kind":"plain","optional":true}},"block_types":{"event_streams":{"nesting_mode":"list","block":{"attributes":{"id":{"type":"string","description":"a resource identifier","description_kind":"plain","optional":true,"computed":true},"uri":{"type":"string","description":"a uri for locating a resource","description_kind":"plain","optional":true,"computed":true}},"description":"list of all EventStreams that will be used to configure and export this endpoint's logs","description_kind":"plain"}}},"description":"logging module configuration or `null`","description_kind":"plain"}},"mutual_tls":{"nesting_mode":"set","block":{"attributes":{"enabled":{"type":"bool","description":"`true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified","description_kind":"plain","optional":true}},"block_types":{"certificate_authorities":{"nesting_mode":"list","block":{"attributes":{"id":{"type":"string","description":"a resource identifier","description_kind":"plain","optional":true,"computed":true},"uri":{"type":"string","description":"a uri for locating a resource","description_kind":"plain","optional":true,"computed":true}},"description":"PEM-encoded CA certificates that will be used to validate. Multiple CAs may be provided by concatenating them together.","description_kind":"plain"}}},"description":"mutual TLS module configuration or `null`","description_kind":"plain"}},"oauth":{"nesting_mode":"set","block":{"attributes":{"auth_check_interval":{"type":"number","description":"Integer number of seconds after which ngrok guarantees it will refresh user state from the identity provider and recheck whether the user is still authorized to access the endpoint. This is the preferred tunable to use to enforce a minimum amount of time after which a revoked user will no longer be able to access the resource.","description_kind":"plain","optional":true},"cookie_prefix":{"type":"string","description":"the prefix of the session cookie that ngrok sets on the http client to cache authentication. default is 'ngrok.'","description_kind":"plain","optional":true},"enabled":{"type":"bool","description":"`true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified","description_kind":"plain","optional":true},"inactivity_timeout":{"type":"number","description":"Integer number of seconds of inactivity after which if the user has not accessed the endpoint, their session will time out and they will be forced to reauthenticate.","description_kind":"plain","optional":true},"maximum_duration":{"type":"number","description":"Integer number of seconds of the maximum duration of an authenticated session. After this period is exceeded, a user must reauthenticate.","description_kind":"plain","optional":true},"options_passthrough":{"type":"bool","description":"Do not enforce authentication on HTTP OPTIONS requests. necessary if you are supporting CORS.","description_kind":"plain","optional":true}},"block_types":{"provider":{"nesting_mode":"set","block":{"block_types":{"facebook":{"nesting_mode":"set","block":{"attributes":{"client_id":{"type":"string","description":"the OAuth app client ID. retrieve it from the identity provider's dashboard where you created your own OAuth app. optional. if unspecified, ngrok will use its own managed oauth application which has additional restrictions. see the OAuth module docs for more details. if present, client_secret must be present as well.","description_kind":"plain","optional":true},"client_secret":{"type":"string","description":"the OAuth app client secret. retrieve if from the identity provider's dashboard where you created your own OAuth app. optional, see all of the caveats in the docs for `client_id`.","description_kind":"plain","optional":true,"sensitive":true},"email_addresses":{"type":["list","string"],"description":"a list of email addresses of users authenticated by identity provider who are allowed access to the endpoint","description_kind":"plain","optional":true},"email_domains":{"type":["list","string"],"description":"a list of email domains of users authenticated by identity provider who are allowed access to the endpoint","description_kind":"plain","optional":true},"scopes":{"type":["list","string"],"description":"a list of provider-specific OAuth scopes with the permissions your OAuth app would like to ask for. these may not be set if you are using the ngrok-managed oauth app (i.e. you must pass both `client_id` and `client_secret` to set scopes)","description_kind":"plain","optional":true}},"description":"configuration for using facebook as the identity provider","description_kind":"plain"}},"github":{"nesting_mode":"set","block":{"attributes":{"client_id":{"type":"string","description":"the OAuth app client ID. retrieve it from the identity provider's dashboard where you created your own OAuth app. optional. if unspecified, ngrok will use its own managed oauth application which has additional restrictions. see the OAuth module docs for more details. if present, client_secret must be present as well.","description_kind":"plain","optional":true},"client_secret":{"type":"string","description":"the OAuth app client secret. retrieve if from the identity provider's dashboard where you created your own OAuth app. optional, see all of the caveats in the docs for `client_id`.","description_kind":"plain","optional":true,"sensitive":true},"email_addresses":{"type":["list","string"],"description":"a list of email addresses of users authenticated by identity provider who are allowed access to the endpoint","description_kind":"plain","optional":true},"email_domains":{"type":["list","string"],"description":"a list of email domains of users authenticated by identity provider who are allowed access to the endpoint","description_kind":"plain","optional":true},"organizations":{"type":["list","string"],"description":"a list of github org identifiers. users who are members of any of the listed organizations will be allowed access. identifiers should be the organization's 'slug'","description_kind":"plain","optional":true},"scopes":{"type":["list","string"],"description":"a list of provider-specific OAuth scopes with the permissions your OAuth app would like to ask for. these may not be set if you are using the ngrok-managed oauth app (i.e. you must pass both `client_id` and `client_secret` to set scopes)","description_kind":"plain","optional":true},"teams":{"type":["list","string"],"description":"a list of github teams identifiers. users will be allowed access to the endpoint if they are a member of any of these teams. identifiers should be in the 'slug' format qualified with the org name, e.g. `org-name/team-name`","description_kind":"plain","optional":true}},"description":"configuration for using github as the identity provider","description_kind":"plain"}},"google":{"nesting_mode":"set","block":{"attributes":{"client_id":{"type":"string","description":"the OAuth app client ID. retrieve it from the identity provider's dashboard where you created your own OAuth app. optional. if unspecified, ngrok will use its own managed oauth application which has additional restrictions. see the OAuth module docs for more details. if present, client_secret must be present as well.","description_kind":"plain","optional":true},"client_secret":{"type":"string","description":"the OAuth app client secret. retrieve if from the identity provider's dashboard where you created your own OAuth app. optional, see all of the caveats in the docs for `client_id`.","description_kind":"plain","optional":true,"sensitive":true},"email_addresses":{"type":["list","string"],"description":"a list of email addresses of users authenticated by identity provider who are allowed access to the endpoint","description_kind":"plain","optional":true},"email_domains":{"type":["list","string"],"description":"a list of email domains of users authenticated by identity provider who are allowed access to the endpoint","description_kind":"plain","optional":true},"scopes":{"type":["list","string"],"description":"a list of provider-specific OAuth scopes with the permissions your OAuth app would like to ask for. these may not be set if you are using the ngrok-managed oauth app (i.e. you must pass both `client_id` and `client_secret` to set scopes)","description_kind":"plain","optional":true}},"description":"configuration for using google as the identity provider","description_kind":"plain"}},"microsoft":{"nesting_mode":"set","block":{"attributes":{"client_id":{"type":"string","description":"the OAuth app client ID. retrieve it from the identity provider's dashboard where you created your own OAuth app. optional. if unspecified, ngrok will use its own managed oauth application which has additional restrictions. see the OAuth module docs for more details. if present, client_secret must be present as well.","description_kind":"plain","optional":true},"client_secret":{"type":"string","description":"the OAuth app client secret. retrieve if from the identity provider's dashboard where you created your own OAuth app. optional, see all of the caveats in the docs for `client_id`.","description_kind":"plain","optional":true,"sensitive":true},"email_addresses":{"type":["list","string"],"description":"a list of email addresses of users authenticated by identity provider who are allowed access to the endpoint","description_kind":"plain","optional":true},"email_domains":{"type":["list","string"],"description":"a list of email domains of users authenticated by identity provider who are allowed access to the endpoint","description_kind":"plain","optional":true},"scopes":{"type":["list","string"],"description":"a list of provider-specific OAuth scopes with the permissions your OAuth app would like to ask for. these may not be set if you are using the ngrok-managed oauth app (i.e. you must pass both `client_id` and `client_secret` to set scopes)","description_kind":"plain","optional":true}},"description":"configuration for using microsoft as the identity provider","description_kind":"plain"}}},"description":"an object which defines the identity provider to use for authentication and configuration for who may access the endpoint","description_kind":"plain"}}},"description":"oauth module configuration or `null`","description_kind":"plain"}},"oidc":{"nesting_mode":"set","block":{"attributes":{"client_id":{"type":"string","description":"The OIDC app's client ID and OIDC audience.","description_kind":"plain","optional":true},"client_secret":{"type":"string","description":"The OIDC app's client secret.","description_kind":"plain","optional":true,"sensitive":true},"cookie_prefix":{"type":"string","description":"the prefix of the session cookie that ngrok sets on the http client to cache authentication. default is 'ngrok.'","description_kind":"plain","optional":true},"enabled":{"type":"bool","description":"`true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified","description_kind":"plain","optional":true},"inactivity_timeout":{"type":"number","description":"Integer number of seconds of inactivity after which if the user has not accessed the endpoint, their session will time out and they will be forced to reauthenticate.","description_kind":"plain","optional":true},"issuer":{"type":"string","description":"URL of the OIDC \"OpenID provider\". This is the base URL used for discovery.","description_kind":"plain","optional":true},"maximum_duration":{"type":"number","description":"Integer number of seconds of the maximum duration of an authenticated session. After this period is exceeded, a user must reauthenticate.","description_kind":"plain","optional":true},"options_passthrough":{"type":"bool","description":"Do not enforce authentication on HTTP OPTIONS requests. necessary if you are supporting CORS.","description_kind":"plain","optional":true},"scopes":{"type":["list","string"],"description":"The set of scopes to request from the OIDC identity provider.","description_kind":"plain","optional":true}},"description":"oidc module configuration or `null`","description_kind":"plain"}},"request_headers":{"nesting_mode":"set","block":{"attributes":{"add":{"type":["map","string"],"description":"a map of header key to header value that will be injected into the HTTP Request before being sent to the upstream application server","description_kind":"plain","optional":true},"enabled":{"type":"bool","description":"`true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified","description_kind":"plain","optional":true},"remove":{"type":["list","string"],"description":"a list of header names that will be removed from the HTTP Request before being sent to the upstream application server","description_kind":"plain","optional":true}},"description":"request headers module configuration or `null`","description_kind":"plain"}},"response_headers":{"nesting_mode":"set","block":{"attributes":{"add":{"type":["map","string"],"description":"a map of header key to header value that will be injected into the HTTP Response returned to the HTTP client","description_kind":"plain","optional":true},"enabled":{"type":"bool","description":"`true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified","description_kind":"plain","optional":true},"remove":{"type":["list","string"],"description":"a list of header names that will be removed from the HTTP Response returned to the HTTP client","description_kind":"plain","optional":true}},"description":"response headers module configuration or `null`","description_kind":"plain"}},"saml":{"nesting_mode":"set","block":{"attributes":{"allow_idp_initiated":{"type":"bool","description":"If true, the IdP may initiate a login directly (e.g. the user does not need to visit the endpoint first and then be redirected). The IdP should set the `RelayState` parameter to the target URL of the resource they want the user to be redirected to after the SAML login assertion has been processed.","description_kind":"plain","optional":true},"assertion_consumer_service_url":{"type":"string","description":"The public URL of the SP's Assertion Consumer Service. This is where the IdP will redirect to during an authentication flow. This will need to be specified to the IdP as configuration.","description_kind":"plain","optional":true,"computed":true},"authorized_groups":{"type":["list","string"],"description":"If present, only users who are a member of one of the listed groups may access the target endpoint.","description_kind":"plain","optional":true},"cookie_prefix":{"type":"string","description":"the prefix of the session cookie that ngrok sets on the http client to cache authentication. default is 'ngrok.'","description_kind":"plain","optional":true},"enabled":{"type":"bool","description":"`true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified","description_kind":"plain","optional":true},"entity_id":{"type":"string","description":"The SP Entity's unique ID. This always takes the form of a URL. In ngrok's implementation, this URL is the same as the metadata URL. This will need to be specified to the IdP as configuration.","description_kind":"plain","optional":true,"computed":true},"force_authn":{"type":"bool","description":"If true, indicates that whenever we redirect a user to the IdP for authentication that the IdP must prompt the user for authentication credentials even if the user already has a valid session with the IdP.","description_kind":"plain","optional":true},"idp_metadata":{"type":"string","description":"The full XML IdP EntityDescriptor. Your IdP may provide this to you as a a file to download or as a URL.","description_kind":"plain","optional":true},"idp_metadata_url":{"type":"string","description":"The IdP's metadata URL which returns the XML IdP EntityDescriptor. The IdP's metadata URL specifies how to connect to the IdP as well as its public key which is then used to validate the signature on incoming SAML assertions to the ACS endpoint.","description_kind":"plain","optional":true},"inactivity_timeout":{"type":"number","description":"Integer number of seconds of inactivity after which if the user has not accessed the endpoint, their session will time out and they will be forced to reauthenticate.","description_kind":"plain","optional":true},"maximum_duration":{"type":"number","description":"Integer number of seconds of the maximum duration of an authenticated session. After this period is exceeded, a user must reauthenticate.","description_kind":"plain","optional":true},"metadata_url":{"type":"string","description":"A public URL where the SP's metadata is hosted. If an IdP supports dynamic configuration, this is the URL it can use to retrieve the SP metadata.","description_kind":"plain","optional":true,"computed":true},"options_passthrough":{"type":"bool","description":"Do not enforce authentication on HTTP OPTIONS requests. necessary if you are supporting CORS.","description_kind":"plain","optional":true},"request_signing_certificate_pem":{"type":"string","description":"PEM-encoded x.509 certificate of the key pair that is used to sign all SAML requests that the ngrok SP makes to the IdP. Many IdPs do not support request signing verification, but we highly recommend specifying this in the IdP's configuration if it is supported.","description_kind":"plain","optional":true,"computed":true},"single_logout_url":{"type":"string","description":"The public URL of the SP's Single Logout Service. This is where the IdP will redirect to during a single logout flow. This will optionally need to be specified to the IdP as configuration.","description_kind":"plain","optional":true,"computed":true}},"description":"saml module configuration or `null`","description_kind":"plain"}},"tls_termination":{"nesting_mode":"set","block":{"attributes":{"enabled":{"type":"bool","description":"`true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified","description_kind":"plain","optional":true},"min_version":{"type":"string","description":"The minimum TLS version used for termination and advertised to the client during the TLS handshake. if unspecified, ngrok will choose an industry-safe default. This value must be null if `terminate_at` is set to `upstream`.","description_kind":"plain","optional":true},"terminate_at":{"type":"string","description":"`edge` if the ngrok edge should terminate TLS traffic, `upstream` if TLS traffic should be passed through to the upstream ngrok agent / application server for termination. if `upstream` is chosen, most other modules will be disallowed because they rely on the ngrok edge being able to access the underlying traffic.","description_kind":"plain","optional":true}},"description":"TLS termination module configuration or `null`","description_kind":"plain"}},"webhook_validation":{"nesting_mode":"set","block":{"attributes":{"enabled":{"type":"bool","description":"`true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified","description_kind":"plain","optional":true},"provider":{"type":"string","description":"a string indicating which webhook provider will be sending webhooks to this endpoint. Value must be one of the supported providers: `SLACK`, `SNS`, `STRIPE`, `GITHUB`, `TWILIO`, `SHOPIFY`, `GITLAB`, `INTERCOM`.","description_kind":"plain","optional":true},"secret":{"type":"string","description":"a string secret used to validate requests from the given provider. All providers except AWS SNS require a secret","description_kind":"plain","optional":true,"sensitive":true}},"description":"webhook validation module configuration or `null`","description_kind":"plain"}}},"description":"Endpoint Configurations are a reusable group of modules that encapsulate how\n traffic to a domain or address is handled. Endpoint configurations are only\n applied to Domains and TCP Addresses they have been attached to.","description_kind":"plain"}},"ngrok_event_destination":{"version":0,"block":{"attributes":{"description":{"type":"string","description":"Human-readable description of the Event Destination. Optional, max 255 bytes.","description_kind":"plain","optional":true},"format":{"type":"string","description":"The output format you would like to serialize events into when sending to their target. Currently the only accepted value is `JSON`.","description_kind":"plain","optional":true},"id":{"type":"string","description":"Unique identifier for this Event Destination.","description_kind":"plain","optional":true,"computed":true},"metadata":{"type":"string","description":"Arbitrary user-defined machine-readable data of this Event Destination. Optional, max 4096 bytes.","description_kind":"plain","optional":true},"verify_with_test_event":{"type":"bool","description_kind":"plain","optional":true}},"block_types":{"target":{"nesting_mode":"set","block":{"block_types":{"cloudwatch_logs":{"nesting_mode":"set","block":{"attributes":{"log_group_arn":{"type":"string","description":"An Amazon Resource Name specifying the CloudWatch Logs group to deposit events into.","description_kind":"plain","optional":true}},"block_types":{"auth":{"nesting_mode":"set","block":{"block_types":{"creds":{"nesting_mode":"set","block":{"attributes":{"aws_access_key_id":{"type":"string","description":"The ID portion of an AWS access key.","description_kind":"plain","optional":true},"aws_secret_access_key":{"type":"string","description":"The secret portion of an AWS access key.","description_kind":"plain","optional":true}},"description":"Credentials to your AWS account if you prefer ngrok to sign in with long-term access keys.","description_kind":"plain"}},"role":{"nesting_mode":"set","block":{"attributes":{"role_arn":{"type":"string","description":"An ARN that specifies the role that ngrok should use to deliver to the configured target.","description_kind":"plain","optional":true}},"description":"A role for ngrok to assume on your behalf to deposit events into your AWS account.","description_kind":"plain"}}},"description":"Configuration for how to authenticate into your AWS account. Exactly one of `role` or `creds` should be configured.","description_kind":"plain"}}},"description":"Configuration used to send events to Amazon CloudWatch Logs.","description_kind":"plain"}},"debug":{"nesting_mode":"set","block":{"attributes":{"callback_url":{"type":"string","description":"URL to send events to.","description_kind":"plain","optional":true},"log":{"type":"bool","description":"Whether or not to output to publisher service logs.","description_kind":"plain","optional":true}},"description":"Configuration used for internal debugging.","description_kind":"plain"}},"firehose":{"nesting_mode":"set","block":{"attributes":{"delivery_stream_arn":{"type":"string","description":"An Amazon Resource Name specifying the Firehose delivery stream to deposit events into.","description_kind":"plain","optional":true}},"block_types":{"auth":{"nesting_mode":"set","block":{"block_types":{"creds":{"nesting_mode":"set","block":{"attributes":{"aws_access_key_id":{"type":"string","description":"The ID portion of an AWS access key.","description_kind":"plain","optional":true},"aws_secret_access_key":{"type":"string","description":"The secret portion of an AWS access key.","description_kind":"plain","optional":true}},"description":"Credentials to your AWS account if you prefer ngrok to sign in with long-term access keys.","description_kind":"plain"}},"role":{"nesting_mode":"set","block":{"attributes":{"role_arn":{"type":"string","description":"An ARN that specifies the role that ngrok should use to deliver to the configured target.","description_kind":"plain","optional":true}},"description":"A role for ngrok to assume on your behalf to deposit events into your AWS account.","description_kind":"plain"}}},"description":"Configuration for how to authenticate into your AWS account. Exactly one of `role` or `creds` should be configured.","description_kind":"plain"}}},"description":"Configuration used to send events to Amazon Kinesis Data Firehose.","description_kind":"plain"}},"kinesis":{"nesting_mode":"set","block":{"attributes":{"stream_arn":{"type":"string","description":"An Amazon Resource Name specifying the Kinesis stream to deposit events into.","description_kind":"plain","optional":true}},"block_types":{"auth":{"nesting_mode":"set","block":{"block_types":{"creds":{"nesting_mode":"set","block":{"attributes":{"aws_access_key_id":{"type":"string","description":"The ID portion of an AWS access key.","description_kind":"plain","optional":true},"aws_secret_access_key":{"type":"string","description":"The secret portion of an AWS access key.","description_kind":"plain","optional":true}},"description":"Credentials to your AWS account if you prefer ngrok to sign in with long-term access keys.","description_kind":"plain"}},"role":{"nesting_mode":"set","block":{"attributes":{"role_arn":{"type":"string","description":"An ARN that specifies the role that ngrok should use to deliver to the configured target.","description_kind":"plain","optional":true}},"description":"A role for ngrok to assume on your behalf to deposit events into your AWS account.","description_kind":"plain"}}},"description":"Configuration for how to authenticate into your AWS account. Exactly one of `role` or `creds` should be configured.","description_kind":"plain"}}},"description":"Configuration used to send events to Amazon Kinesis.","description_kind":"plain"}}},"description":"An object that encapsulates where and how to send your events. An event destination must contain exactly one of the following objects, leaving the rest null: `kinesis`, `firehose`, `cloudwatch_logs`, or `s3`.","description_kind":"plain"}}},"description_kind":"plain"}},"ngrok_event_subscription":{"version":0,"block":{"attributes":{"description":{"type":"string","description":"Arbitrary customer supplied information intended to be human readable. Optional, max 255 chars.","description_kind":"plain","optional":true},"destination_ids":{"type":["list","string"],"description":"A list of Event Destination IDs which should be used for this Event Stream. Event Streams are required to have at least one Event Destination.","description_kind":"plain","optional":true},"id":{"type":"string","description":"Unique identifier for this Event Subscription.","description_kind":"plain","optional":true,"computed":true},"metadata":{"type":"string","description":"Arbitrary customer supplied information intended to be machine readable. Optional, max 4096 chars.","description_kind":"plain","optional":true}},"block_types":{"sources":{"nesting_mode":"list","block":{"attributes":{"fields":{"type":["list","string"],"description":"TODO","description_kind":"plain","optional":true},"filter":{"type":"string","description":"TODO","description_kind":"plain","optional":true},"type":{"type":"string","description":"Type of event for which an event subscription will trigger","description_kind":"plain","optional":true},"uri":{"type":"string","description":"URI of the Event Source API resource.","description_kind":"plain","optional":true,"computed":true}},"description":"Sources containing the types for which this event subscription will trigger","description_kind":"plain"}}},"description_kind":"plain"}},"ngrok_ip_policy":{"version":0,"block":{"attributes":{"action":{"type":"string","description":"the IP policy action. Supported values are `allow` or `deny`","description_kind":"plain","required":true},"description":{"type":"string","description":"human-readable description of the source IPs of this IP policy. optional, max 255 bytes.","description_kind":"plain","optional":true},"id":{"type":"string","description":"unique identifier for this IP policy","description_kind":"plain","computed":true},"metadata":{"type":"string","description":"arbitrary user-defined machine-readable data of this IP policy. optional, max 4096 bytes.","description_kind":"plain","optional":true}},"description":"IP Policies are reusable groups of CIDR ranges with an `allow` or `deny`\n action. They can be attached to endpoints via the Endpoint Configuration IP\n Policy module. They can also be used with IP Restrictions to control source\n IP ranges that can start tunnel sessions and connect to the API and dashboard.","description_kind":"plain"}},"ngrok_ip_policy_rule":{"version":0,"block":{"attributes":{"cidr":{"type":"string","description":"an IP or IP range specified in CIDR notation. IPv4 and IPv6 are both supported.","description_kind":"plain","required":true},"description":{"type":"string","description":"human-readable description of the source IPs of this IP rule. optional, max 255 bytes.","description_kind":"plain","optional":true},"id":{"type":"string","description":"unique identifier for this IP policy rule","description_kind":"plain","optional":true,"computed":true},"ip_policy_id":{"type":"string","description":"ID of the IP policy this IP policy rule will be attached to","description_kind":"plain","required":true},"metadata":{"type":"string","description":"arbitrary user-defined machine-readable data of this IP policy rule. optional, max 4096 bytes.","description_kind":"plain","optional":true}},"description":"IP Policy Rules are the IPv4 or IPv6 CIDRs entries that\n make up an IP Policy.","description_kind":"plain"}},"ngrok_ip_restriction":{"version":0,"block":{"attributes":{"description":{"type":"string","description":"human-readable description of this IP restriction. optional, max 255 bytes.","description_kind":"plain","optional":true},"enforced":{"type":"bool","description":"true if the IP restriction will be enforced. if false, only warnings will be issued","description_kind":"plain","optional":true},"id":{"type":"string","description":"unique identifier for this IP restriction","description_kind":"plain","optional":true,"computed":true},"ip_policy_ids":{"type":["list","string"],"description":"the set of IP policy identifiers that are used to enforce the restriction","description_kind":"plain","required":true},"metadata":{"type":"string","description":"arbitrary user-defined machine-readable data of this IP restriction. optional, max 4096 bytes.","description_kind":"plain","optional":true},"type":{"type":"string","description":"the type of IP restriction. this defines what traffic will be restricted with the attached policies. four values are currently supported: `dashboard`, `api`, `agent`, and `endpoints`","description_kind":"plain","required":true}},"description":"An IP restriction is a restriction placed on the CIDRs that are allowed to\n initate traffic to a specific aspect of your ngrok account. An IP\n restriction has a type which defines the ingress it applies to. IP\n restrictions can be used to enforce the source IPs that can make API\n requests, log in to the dashboard, start ngrok agents, and connect to your\n public-facing endpoints.","description_kind":"plain"}},"ngrok_ip_whitelist_entry":{"version":0,"block":{"attributes":{"description":{"type":"string","description":"human-readable description of the source IPs for this IP whitelist entry. optional, max 255 bytes.","description_kind":"plain","optional":true},"id":{"type":"string","description":"unique identifier for this IP whitelist entry","description_kind":"plain","optional":true,"computed":true},"ip_net":{"type":"string","description":"an IP address or IP network range in CIDR notation (e.g. 10.1.1.1 or 10.1.0.0/16) of addresses that will be whitelisted to communicate with your tunnel endpoints","description_kind":"plain","optional":true},"metadata":{"type":"string","description":"arbitrary user-defined machine-readable data of this IP whitelist entry. optional, max 4096 bytes.","description_kind":"plain","optional":true}},"description":"The IP Whitelist is deprecated and will be removed. Use an IP Restriction\n with an `endpoints` type instead.","description_kind":"plain"}},"ngrok_reserved_addr":{"version":0,"block":{"attributes":{"addr":{"type":"string","description":"hostname:port of the reserved address that was assigned at creation time","description_kind":"plain","optional":true,"computed":true},"description":{"type":"string","description":"human-readable description of what this reserved address will be used for","description_kind":"plain","optional":true},"endpoint_configuration_id":{"type":"string","description":"ID of an endpoint configuration of type tcp that will be used to handle inbound traffic to this address","description_kind":"plain","optional":true},"id":{"type":"string","description":"unique reserved address resource identifier","description_kind":"plain","optional":true,"computed":true},"metadata":{"type":"string","description":"arbitrary user-defined machine-readable data of this reserved address. Optional, max 4096 bytes.","description_kind":"plain","optional":true},"region":{"type":"string","description":"reserve the address in this geographic ngrok datacenter. Optional, default is us. (au, eu, ap, us, jp, in, sa)","description_kind":"plain","optional":true}},"description":"Reserved Addresses are TCP addresses that can be used to listen for traffic.\n TCP address hostnames and ports are assigned by ngrok, they cannot be\n chosen.","description_kind":"plain"}},"ngrok_reserved_domain":{"version":0,"block":{"attributes":{"certificate_id":{"type":"string","description":"ID of a user-uploaded TLS certificate to use for connections to targeting this domain. Optional, mutually exclusive with `certificate_management_policy`.","description_kind":"plain","optional":true},"cname_target":{"type":"string","description":"DNS CNAME target for a custom hostname, or null if the reserved domain is a subdomain of *.ngrok.io","description_kind":"plain","optional":true,"computed":true},"description":{"type":"string","description":"human-readable description of what this reserved domain will be used for","description_kind":"plain","optional":true},"domain":{"type":"string","description":"hostname of the reserved domain","description_kind":"plain","computed":true},"http_endpoint_configuration_id":{"type":"string","description":"ID of an endpoint configuration of type http that will be used to handle inbound http traffic to this domain","description_kind":"plain","optional":true},"https_endpoint_configuration_id":{"type":"string","description":"ID of an endpoint configuration of type https that will be used to handle inbound https traffic to this domain","description_kind":"plain","optional":true},"id":{"type":"string","description":"unique reserved domain resource identifier","description_kind":"plain","optional":true,"computed":true},"metadata":{"type":"string","description":"arbitrary user-defined machine-readable data of this reserved domain. Optional, max 4096 bytes.","description_kind":"plain","optional":true},"name":{"type":"string","description":"the domain name to reserve. It may be a full domain name like app.example.com. If the name does not contain a '.' it will reserve that subdomain on ngrok.io.","description_kind":"plain","required":true},"region":{"type":"string","description":"reserve the domain in this geographic ngrok datacenter. Optional, default is us. (au, eu, ap, us, jp, in, sa)","description_kind":"plain","optional":true}},"block_types":{"certificate_management_policy":{"nesting_mode":"set","block":{"attributes":{"authority":{"type":"string","description":"certificate authority to request certificates from. The only supported value is letsencrypt.","description_kind":"plain","optional":true},"private_key_type":{"type":"string","description":"type of private key to use when requesting certificates. Defaults to rsa, can be either rsa or ecdsa.","description_kind":"plain","optional":true}},"description":"configuration for automatic management of TLS certificates for this domain, or null if automatic management is disabled","description_kind":"plain"}}},"description":"Reserved Domains are hostnames that you can listen for traffic on. Domains\n can be used to listen for http, https or tls traffic. You may use a domain\n that you own by creating a CNAME record specified in the returned resource.\n This CNAME record points traffic for that domain to ngrok's edge servers.","description_kind":"plain"}},"ngrok_ssh_certificate_authority":{"version":0,"block":{"attributes":{"description":{"type":"string","description":"human-readable description of this SSH Certificate Authority. optional, max 255 bytes.","description_kind":"plain","optional":true},"elliptic_curve":{"type":"string","description":"the type of elliptic curve to use when creating an ECDSA key","description_kind":"plain","optional":true},"id":{"type":"string","description":"unique identifier for this SSH Certificate Authority","description_kind":"plain","optional":true,"computed":true},"key_size":{"type":"number","description":"the key size to use when creating an RSA key. one of `2048` or `4096`","description_kind":"plain","optional":true},"key_type":{"type":"string","description":"the type of private key for this SSH Certificate Authority","description_kind":"plain","optional":true,"computed":true},"metadata":{"type":"string","description":"arbitrary user-defined machine-readable data of this SSH Certificate Authority. optional, max 4096 bytes.","description_kind":"plain","optional":true},"private_key_type":{"type":"string","description":"the type of private key to generate. one of `rsa`, `ecdsa`, `ed25519`","description_kind":"plain","optional":true},"public_key":{"type":"string","description":"raw public key for this SSH Certificate Authority","description_kind":"plain","optional":true,"computed":true}},"description":"An SSH Certificate Authority is a pair of an SSH Certificate and its private\n key that can be used to sign other SSH host and user certificates.","description_kind":"plain"}},"ngrok_ssh_credential":{"version":0,"block":{"attributes":{"acl":{"type":["list","string"],"description":"optional list of ACL rules. If unspecified, the credential will have no restrictions. The only allowed ACL rule at this time is the `bind` rule. The `bind` rule allows the caller to restrict what domains and addresses the token is allowed to bind. For example, to allow the token to open a tunnel on example.ngrok.io your ACL would include the rule `bind:example.ngrok.io`. Bind rules may specify a leading wildcard to match multiple domains with a common suffix. For example, you may specify a rule of `bind:*.example.com` which will allow `x.example.com`, `y.example.com`, `*.example.com`, etc. A rule of `'*'` is equivalent to no acl at all and will explicitly permit all actions.","description_kind":"plain","optional":true},"description":{"type":"string","description":"human-readable description of who or what will use the ssh credential to authenticate. Optional, max 255 bytes.","description_kind":"plain","optional":true},"id":{"type":"string","description":"unique ssh credential resource identifier","description_kind":"plain","optional":true,"computed":true},"metadata":{"type":"string","description":"arbitrary user-defined machine-readable data of this ssh credential. Optional, max 4096 bytes.","description_kind":"plain","optional":true},"public_key":{"type":"string","description":"the PEM-encoded public key of the SSH keypair that will be used to authenticate","description_kind":"plain","required":true}},"description":"SSH Credentials are SSH public keys that can be used to start SSH tunnels\n via the ngrok SSH tunnel gateway.","description_kind":"plain"}},"ngrok_ssh_host_certificate":{"version":0,"block":{"attributes":{"certificate":{"type":"string","description":"the signed SSH certificate in OpenSSH Authorized Keys format. this value should be placed in a `-cert.pub` certificate file on disk that should be referenced in your `sshd_config` configuration file with a `HostCertificate` directive","description_kind":"plain","optional":true,"computed":true},"description":{"type":"string","description":"human-readable description of this SSH Host Certificate. optional, max 255 bytes.","description_kind":"plain","optional":true},"id":{"type":"string","description":"unique identifier for this SSH Host Certificate","description_kind":"plain","optional":true,"computed":true},"key_type":{"type":"string","description":"the key type of the `public_key`, one of `rsa`, `ecdsa` or `ed25519`","description_kind":"plain","optional":true,"computed":true},"metadata":{"type":"string","description":"arbitrary user-defined machine-readable data of this SSH Host Certificate. optional, max 4096 bytes.","description_kind":"plain","optional":true},"principals":{"type":["list","string"],"description":"the list of principals included in the ssh host certificate. This is the list of hostnames and/or IP addresses that are authorized to serve SSH traffic with this certificate. Dangerously, if no principals are specified, this certificate is considered valid for all hosts.","description_kind":"plain","optional":true},"public_key":{"type":"string","description":"a public key in OpenSSH Authorized Keys format that this certificate signs","description_kind":"plain","required":true},"ssh_certificate_authority_id":{"type":"string","description":"the ssh certificate authority that is used to sign this ssh host certificate","description_kind":"plain","required":true},"valid_after":{"type":"string","description":"the time when the ssh host certificate becomes valid, in RFC 3339 format.","description_kind":"plain","optional":true},"valid_until":{"type":"string","description":"the time after which the ssh host certificate becomes invalid, in RFC 3339 format. the OpenSSH certificates RFC calls this `valid_before`.","description_kind":"plain","optional":true}},"description":"SSH Host Certificates along with the corresponding private key allows an SSH\n server to assert its authenticity to connecting SSH clients who trust the\n SSH Certificate Authority that was used to sign the certificate.","description_kind":"plain"}},"ngrok_ssh_user_certificate":{"version":0,"block":{"attributes":{"certificate":{"type":"string","description":"the signed SSH certificate in OpenSSH Authorized Keys Format. this value should be placed in a `-cert.pub` certificate file on disk that should be referenced in your `sshd_config` configuration file with a `HostCertificate` directive","description_kind":"plain","optional":true,"computed":true},"critical_options":{"type":["map","string"],"description":"A map of critical options included in the certificate. Only two critical options are currently defined by OpenSSH: `force-command` and `source-address`. See [the OpenSSH certificate protocol spec](https://github.com/openssh/openssh-portable/blob/master/PROTOCOL.certkeys) for additional details.","description_kind":"plain","optional":true},"description":{"type":"string","description":"human-readable description of this SSH User Certificate. optional, max 255 bytes.","description_kind":"plain","optional":true},"extensions":{"type":["map","string"],"description":"A map of extensions included in the certificate. Extensions are additional metadata that can be interpreted by the SSH server for any purpose. These can be used to permit or deny the ability to open a terminal, do port forwarding, x11 forwarding, and more. If unspecified, the certificate will include limited permissions with the following extension map: `{\"permit-pty\": \"\", \"permit-user-rc\": \"\"}` OpenSSH understands a number of predefined extensions. See [the OpenSSH certificate protocol spec](https://github.com/openssh/openssh-portable/blob/master/PROTOCOL.certkeys) for additional details.","description_kind":"plain","optional":true},"id":{"type":"string","description":"unique identifier for this SSH User Certificate","description_kind":"plain","optional":true,"computed":true},"key_type":{"type":"string","description":"the key type of the `public_key`, one of `rsa`, `ecdsa` or `ed25519`","description_kind":"plain","optional":true,"computed":true},"metadata":{"type":"string","description":"arbitrary user-defined machine-readable data of this SSH User Certificate. optional, max 4096 bytes.","description_kind":"plain","optional":true},"principals":{"type":["list","string"],"description":"the list of principals included in the ssh user certificate. This is the list of usernames that the certificate holder may sign in as on a machine authorizinig the signing certificate authority. Dangerously, if no principals are specified, this certificate may be used to log in as any user.","description_kind":"plain","optional":true},"public_key":{"type":"string","description":"a public key in OpenSSH Authorized Keys format that this certificate signs","description_kind":"plain","required":true},"ssh_certificate_authority_id":{"type":"string","description":"the ssh certificate authority that is used to sign this ssh user certificate","description_kind":"plain","required":true},"valid_after":{"type":"string","description":"the time when the ssh host certificate becomes valid, in RFC 3339 format.","description_kind":"plain","optional":true},"valid_until":{"type":"string","description":"the time after which the ssh host certificate becomes invalid, in RFC 3339 format. the OpenSSH certificates RFC calls this `valid_before`.","description_kind":"plain","optional":true}},"description":"SSH User Certificates are presented by SSH clients when connecting to an SSH\n server to authenticate their connection. The SSH server must trust the SSH\n Certificate Authority used to sign the certificate.","description_kind":"plain"}},"ngrok_tls_certificate":{"version":0,"block":{"attributes":{"certificate_pem":{"type":"string","description":"chain of PEM-encoded certificates, leaf first. See [Certificate Bundles](https://ngrok.com/docs/api#tls-certificates-pem).","description_kind":"plain","required":true},"description":{"type":"string","description":"human-readable description of this TLS certificate. optional, max 255 bytes.","description_kind":"plain","optional":true},"id":{"type":"string","description":"unique identifier for this TLS certificate","description_kind":"plain","optional":true,"computed":true},"metadata":{"type":"string","description":"arbitrary user-defined machine-readable data of this TLS certificate. optional, max 4096 bytes.","description_kind":"plain","optional":true},"private_key_pem":{"type":"string","description":"private key for the TLS certificate, PEM-encoded. See [Private Keys](https://ngrok.com/docs/ngrok-link#tls-certificates-key).","description_kind":"plain","required":true}},"block_types":{"subject_alternative_names":{"nesting_mode":"set","block":{"attributes":{"dns_names":{"type":["list","string"],"description":"set of additional domains (including wildcards) this TLS certificate is valid for","description_kind":"plain","optional":true,"computed":true},"ips":{"type":["list","string"],"description":"set of IP addresses this TLS certificate is also valid for","description_kind":"plain","optional":true,"computed":true}},"description":"subject alternative names (SANs) from the leaf of this TLS certificate","description_kind":"plain"}}},"description":"TLS Certificates are pairs of x509 certificates and their matching private\n key that can be used to terminate TLS traffic. TLS certificates are unused\n until they are attached to a Domain. TLS Certificates may also be\n provisioned by ngrok automatically for domains on which you have enabled\n automated certificate provisioning.","description_kind":"plain"}}}}}}
