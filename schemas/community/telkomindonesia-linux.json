{"format_version":"0.2","provider_schemas":{"registry.terraform.io/telkomindonesia/linux":{"provider":{"version":0,"block":{"attributes":{"agent":{"type":"bool","description":"Set to `false` to disable using ssh-agent to authenticate.","description_kind":"plain","optional":true},"agent_identity":{"type":"string","description":"The preferred identity from the ssh agent for authentication.","description_kind":"plain","optional":true},"bastion_certificate":{"type":"string","description":"The contents of a signed CA Certificate. The certificate argument must be used in conjunction with a `bastion_private_key`. These can be loaded from a file on disk using the the `file` function.","description_kind":"plain","optional":true},"bastion_host":{"type":"string","description":"Setting this enables the bastion Host connection. This host will be connected to first, and then the `host` connection will be made from there.","description_kind":"plain","optional":true},"bastion_host_key":{"type":"string","description":"The public key from the remote host or the signing CA, used to verify the host connection.","description_kind":"plain","optional":true},"bastion_password":{"type":"string","description":"The password we should use for the bastion host. Defaults to the value of the `password` field.","description_kind":"plain","optional":true,"sensitive":true},"bastion_port":{"type":"number","description":"The port to use connect to the bastion host. Defaults to the value of the `port` field.","description_kind":"plain","optional":true},"bastion_private_key":{"type":"string","description":"The contents of an SSH key file to use for the bastion host. These can be loaded from a file on disk using the `file` function. Defaults to the value of the `private_key` field.","description_kind":"plain","optional":true,"sensitive":true},"bastion_user":{"type":"string","description":"The user for the connection to the bastion host. Defaults to the value of the `user` field.","description_kind":"plain","optional":true},"certificate":{"type":"string","description":"The contents of a signed CA Certificate. The certificate argument must be used in conjunction with a `private_key`. These can be loaded from a file on disk using the the `file` function.","description_kind":"plain","optional":true},"host":{"type":"string","description":"The address of the resource to connect to.","description_kind":"plain","optional":true},"host_key":{"type":"string","description":"The public key from the remote host or the signing CA, used to verify the connection.","description_kind":"plain","optional":true},"password":{"type":"string","description":"The password we should use for the connection.","description_kind":"plain","optional":true,"sensitive":true},"port":{"type":"number","description":"The port to connect to. Defaults to `22`.","description_kind":"plain","optional":true},"private_key":{"type":"string","description":"The contents of an SSH key to use for the connection. These can be loaded from a file on disk using the `file` function. This takes preference over the `password` if provided.","description_kind":"plain","optional":true,"sensitive":true},"script_path":{"type":"string","description":"The path used to copy scripts meant for remote execution.","description_kind":"plain","optional":true},"timeout":{"type":"string","description":" The timeout to wait for the connection to become available. Should be provided as a string like `30s` or `5m`. Defaults to 5 minutes.","description_kind":"plain","optional":true},"user":{"type":"string","description":"The user that we should use for the connection. Defaults to `root`.","description_kind":"plain","optional":true}},"description_kind":"plain"}},"resource_schemas":{"linux_directory":{"version":0,"block":{"attributes":{"group":{"type":"number","description_kind":"plain","optional":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"mode":{"type":"string","description_kind":"plain","optional":true},"overwrite":{"type":"bool","description":"If true, existing directory on remote will be replaced on create or update. This doesn't affect the content of the directory.","description_kind":"plain","optional":true},"owner":{"type":"number","description_kind":"plain","optional":true},"path":{"type":"string","description_kind":"plain","required":true},"recycle_path":{"type":"string","description":"Path to parent directory of a generated-unix-timestamp directory where the directory will be placed on destroy","description_kind":"plain","optional":true}},"block_types":{"provider_override":{"nesting_mode":"list","block":{"attributes":{"agent":{"type":"bool","description":"Set to `false` to disable using ssh-agent to authenticate.","description_kind":"plain","optional":true},"agent_identity":{"type":"string","description":"The preferred identity from the ssh agent for authentication.","description_kind":"plain","optional":true},"bastion_certificate":{"type":"string","description":"The contents of a signed CA Certificate. The certificate argument must be used in conjunction with a `bastion_private_key`. These can be loaded from a file on disk using the the `file` function.","description_kind":"plain","optional":true},"bastion_host":{"type":"string","description":"Setting this enables the bastion Host connection. This host will be connected to first, and then the `host` connection will be made from there.","description_kind":"plain","optional":true},"bastion_host_key":{"type":"string","description":"The public key from the remote host or the signing CA, used to verify the host connection.","description_kind":"plain","optional":true},"bastion_password":{"type":"string","description":"The password we should use for the bastion host. Defaults to the value of the `password` field.","description_kind":"plain","optional":true,"sensitive":true},"bastion_port":{"type":"number","description":"The port to use connect to the bastion host. Defaults to the value of the `port` field.","description_kind":"plain","optional":true},"bastion_private_key":{"type":"string","description":"The contents of an SSH key file to use for the bastion host. These can be loaded from a file on disk using the `file` function. Defaults to the value of the `private_key` field.","description_kind":"plain","optional":true,"sensitive":true},"bastion_user":{"type":"string","description":"The user for the connection to the bastion host. Defaults to the value of the `user` field.","description_kind":"plain","optional":true},"certificate":{"type":"string","description":"The contents of a signed CA Certificate. The certificate argument must be used in conjunction with a `private_key`. These can be loaded from a file on disk using the the `file` function.","description_kind":"plain","optional":true},"host":{"type":"string","description":"The address of the resource to connect to.","description_kind":"plain","optional":true},"host_key":{"type":"string","description":"The public key from the remote host or the signing CA, used to verify the connection.","description_kind":"plain","optional":true},"id":{"type":"string","description":"Connection instance ID for locking purpose when defined in resource/datasource","description_kind":"plain","required":true},"password":{"type":"string","description":"The password we should use for the connection.","description_kind":"plain","optional":true,"sensitive":true},"port":{"type":"number","description":"The port to connect to. Defaults to `22`.","description_kind":"plain","optional":true},"private_key":{"type":"string","description":"The contents of an SSH key to use for the connection. These can be loaded from a file on disk using the `file` function. This takes preference over the `password` if provided.","description_kind":"plain","optional":true,"sensitive":true},"script_path":{"type":"string","description":"The path used to copy scripts meant for remote execution.","description_kind":"plain","optional":true},"timeout":{"type":"string","description":" The timeout to wait for the connection to become available. Should be provided as a string like `30s` or `5m`. Defaults to 5 minutes.","description_kind":"plain","optional":true},"user":{"type":"string","description":"The user that we should use for the connection. Defaults to `root`.","description_kind":"plain","optional":true}},"description_kind":"plain"},"max_items":1}},"description_kind":"plain"}},"linux_file":{"version":0,"block":{"attributes":{"content":{"type":"string","description_kind":"plain","optional":true},"group":{"type":"number","description_kind":"plain","optional":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"ignore_content":{"type":"bool","description":"If true, `content` will be ignored and won't be included in schema diff","description_kind":"plain","optional":true},"mode":{"type":"string","description_kind":"plain","optional":true},"overwrite":{"type":"bool","description":"If true, existing file on remote will be replaced on create or update","description_kind":"plain","optional":true},"owner":{"type":"number","description_kind":"plain","optional":true},"path":{"type":"string","description_kind":"plain","required":true},"recycle_path":{"type":"string","description":"Path to parent directory of a generated-unix-timestamp directory where the file will be placed on destroy","description_kind":"plain","optional":true}},"block_types":{"provider_override":{"nesting_mode":"list","block":{"attributes":{"agent":{"type":"bool","description":"Set to `false` to disable using ssh-agent to authenticate.","description_kind":"plain","optional":true},"agent_identity":{"type":"string","description":"The preferred identity from the ssh agent for authentication.","description_kind":"plain","optional":true},"bastion_certificate":{"type":"string","description":"The contents of a signed CA Certificate. The certificate argument must be used in conjunction with a `bastion_private_key`. These can be loaded from a file on disk using the the `file` function.","description_kind":"plain","optional":true},"bastion_host":{"type":"string","description":"Setting this enables the bastion Host connection. This host will be connected to first, and then the `host` connection will be made from there.","description_kind":"plain","optional":true},"bastion_host_key":{"type":"string","description":"The public key from the remote host or the signing CA, used to verify the host connection.","description_kind":"plain","optional":true},"bastion_password":{"type":"string","description":"The password we should use for the bastion host. Defaults to the value of the `password` field.","description_kind":"plain","optional":true,"sensitive":true},"bastion_port":{"type":"number","description":"The port to use connect to the bastion host. Defaults to the value of the `port` field.","description_kind":"plain","optional":true},"bastion_private_key":{"type":"string","description":"The contents of an SSH key file to use for the bastion host. These can be loaded from a file on disk using the `file` function. Defaults to the value of the `private_key` field.","description_kind":"plain","optional":true,"sensitive":true},"bastion_user":{"type":"string","description":"The user for the connection to the bastion host. Defaults to the value of the `user` field.","description_kind":"plain","optional":true},"certificate":{"type":"string","description":"The contents of a signed CA Certificate. The certificate argument must be used in conjunction with a `private_key`. These can be loaded from a file on disk using the the `file` function.","description_kind":"plain","optional":true},"host":{"type":"string","description":"The address of the resource to connect to.","description_kind":"plain","optional":true},"host_key":{"type":"string","description":"The public key from the remote host or the signing CA, used to verify the connection.","description_kind":"plain","optional":true},"id":{"type":"string","description":"Connection instance ID for locking purpose when defined in resource/datasource","description_kind":"plain","required":true},"password":{"type":"string","description":"The password we should use for the connection.","description_kind":"plain","optional":true,"sensitive":true},"port":{"type":"number","description":"The port to connect to. Defaults to `22`.","description_kind":"plain","optional":true},"private_key":{"type":"string","description":"The contents of an SSH key to use for the connection. These can be loaded from a file on disk using the `file` function. This takes preference over the `password` if provided.","description_kind":"plain","optional":true,"sensitive":true},"script_path":{"type":"string","description":"The path used to copy scripts meant for remote execution.","description_kind":"plain","optional":true},"timeout":{"type":"string","description":" The timeout to wait for the connection to become available. Should be provided as a string like `30s` or `5m`. Defaults to 5 minutes.","description_kind":"plain","optional":true},"user":{"type":"string","description":"The user that we should use for the connection. Defaults to `root`.","description_kind":"plain","optional":true}},"description_kind":"plain"},"max_items":1}},"description_kind":"plain"}},"linux_script":{"version":0,"block":{"attributes":{"__dirty_output__":{"type":"string","description_kind":"plain","optional":true},"__faulty_output__":{"type":"string","description_kind":"plain","optional":true},"environment":{"type":["map","string"],"description_kind":"plain","optional":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"interpreter":{"type":["list","string"],"description_kind":"plain","optional":true},"output":{"type":"string","description_kind":"plain","computed":true},"sensitive_environment":{"type":["map","string"],"description_kind":"plain","optional":true,"sensitive":true},"triggers":{"type":["map","string"],"description_kind":"plain","optional":true},"working_directory":{"type":"string","description_kind":"plain","optional":true}},"block_types":{"lifecycle_commands":{"nesting_mode":"list","block":{"attributes":{"create":{"type":"string","description_kind":"plain","required":true},"delete":{"type":"string","description_kind":"plain","required":true},"read":{"type":"string","description_kind":"plain","required":true},"update":{"type":"string","description_kind":"plain","optional":true}},"description_kind":"plain"},"min_items":1,"max_items":1},"provider_override":{"nesting_mode":"list","block":{"attributes":{"agent":{"type":"bool","description":"Set to `false` to disable using ssh-agent to authenticate.","description_kind":"plain","optional":true},"agent_identity":{"type":"string","description":"The preferred identity from the ssh agent for authentication.","description_kind":"plain","optional":true},"bastion_certificate":{"type":"string","description":"The contents of a signed CA Certificate. The certificate argument must be used in conjunction with a `bastion_private_key`. These can be loaded from a file on disk using the the `file` function.","description_kind":"plain","optional":true},"bastion_host":{"type":"string","description":"Setting this enables the bastion Host connection. This host will be connected to first, and then the `host` connection will be made from there.","description_kind":"plain","optional":true},"bastion_host_key":{"type":"string","description":"The public key from the remote host or the signing CA, used to verify the host connection.","description_kind":"plain","optional":true},"bastion_password":{"type":"string","description":"The password we should use for the bastion host. Defaults to the value of the `password` field.","description_kind":"plain","optional":true,"sensitive":true},"bastion_port":{"type":"number","description":"The port to use connect to the bastion host. Defaults to the value of the `port` field.","description_kind":"plain","optional":true},"bastion_private_key":{"type":"string","description":"The contents of an SSH key file to use for the bastion host. These can be loaded from a file on disk using the `file` function. Defaults to the value of the `private_key` field.","description_kind":"plain","optional":true,"sensitive":true},"bastion_user":{"type":"string","description":"The user for the connection to the bastion host. Defaults to the value of the `user` field.","description_kind":"plain","optional":true},"certificate":{"type":"string","description":"The contents of a signed CA Certificate. The certificate argument must be used in conjunction with a `private_key`. These can be loaded from a file on disk using the the `file` function.","description_kind":"plain","optional":true},"host":{"type":"string","description":"The address of the resource to connect to.","description_kind":"plain","optional":true},"host_key":{"type":"string","description":"The public key from the remote host or the signing CA, used to verify the connection.","description_kind":"plain","optional":true},"id":{"type":"string","description":"Connection instance ID for locking purpose when defined in resource/datasource","description_kind":"plain","required":true},"password":{"type":"string","description":"The password we should use for the connection.","description_kind":"plain","optional":true,"sensitive":true},"port":{"type":"number","description":"The port to connect to. Defaults to `22`.","description_kind":"plain","optional":true},"private_key":{"type":"string","description":"The contents of an SSH key to use for the connection. These can be loaded from a file on disk using the `file` function. This takes preference over the `password` if provided.","description_kind":"plain","optional":true,"sensitive":true},"script_path":{"type":"string","description":"The path used to copy scripts meant for remote execution.","description_kind":"plain","optional":true},"timeout":{"type":"string","description":" The timeout to wait for the connection to become available. Should be provided as a string like `30s` or `5m`. Defaults to 5 minutes.","description_kind":"plain","optional":true},"user":{"type":"string","description":"The user that we should use for the connection. Defaults to `root`.","description_kind":"plain","optional":true}},"description_kind":"plain"},"max_items":1}},"description_kind":"plain"}}},"data_source_schemas":{"linux_local_forward":{"version":0,"block":{"attributes":{"host":{"type":"string","description":"The local host","description_kind":"plain","computed":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"local_host":{"type":"string","description":"The local host","description_kind":"plain","optional":true},"local_port":{"type":"number","description":"The local port","description_kind":"plain","optional":true},"port":{"type":"number","description":"The local port","description_kind":"plain","computed":true},"remote_host":{"type":"string","description":"The remote host","description_kind":"plain","required":true},"remote_port":{"type":"number","description":"The remote port","description_kind":"plain","required":true}},"block_types":{"provider_override":{"nesting_mode":"list","block":{"attributes":{"agent":{"type":"bool","description":"Set to `false` to disable using ssh-agent to authenticate.","description_kind":"plain","optional":true},"agent_identity":{"type":"string","description":"The preferred identity from the ssh agent for authentication.","description_kind":"plain","optional":true},"bastion_certificate":{"type":"string","description":"The contents of a signed CA Certificate. The certificate argument must be used in conjunction with a `bastion_private_key`. These can be loaded from a file on disk using the the `file` function.","description_kind":"plain","optional":true},"bastion_host":{"type":"string","description":"Setting this enables the bastion Host connection. This host will be connected to first, and then the `host` connection will be made from there.","description_kind":"plain","optional":true},"bastion_host_key":{"type":"string","description":"The public key from the remote host or the signing CA, used to verify the host connection.","description_kind":"plain","optional":true},"bastion_password":{"type":"string","description":"The password we should use for the bastion host. Defaults to the value of the `password` field.","description_kind":"plain","optional":true,"sensitive":true},"bastion_port":{"type":"number","description":"The port to use connect to the bastion host. Defaults to the value of the `port` field.","description_kind":"plain","optional":true},"bastion_private_key":{"type":"string","description":"The contents of an SSH key file to use for the bastion host. These can be loaded from a file on disk using the `file` function. Defaults to the value of the `private_key` field.","description_kind":"plain","optional":true,"sensitive":true},"bastion_user":{"type":"string","description":"The user for the connection to the bastion host. Defaults to the value of the `user` field.","description_kind":"plain","optional":true},"certificate":{"type":"string","description":"The contents of a signed CA Certificate. The certificate argument must be used in conjunction with a `private_key`. These can be loaded from a file on disk using the the `file` function.","description_kind":"plain","optional":true},"host":{"type":"string","description":"The address of the resource to connect to.","description_kind":"plain","optional":true},"host_key":{"type":"string","description":"The public key from the remote host or the signing CA, used to verify the connection.","description_kind":"plain","optional":true},"id":{"type":"string","description":"Connection instance ID for locking purpose when defined in resource/datasource","description_kind":"plain","required":true},"password":{"type":"string","description":"The password we should use for the connection.","description_kind":"plain","optional":true,"sensitive":true},"port":{"type":"number","description":"The port to connect to. Defaults to `22`.","description_kind":"plain","optional":true},"private_key":{"type":"string","description":"The contents of an SSH key to use for the connection. These can be loaded from a file on disk using the `file` function. This takes preference over the `password` if provided.","description_kind":"plain","optional":true,"sensitive":true},"script_path":{"type":"string","description":"The path used to copy scripts meant for remote execution.","description_kind":"plain","optional":true},"timeout":{"type":"string","description":" The timeout to wait for the connection to become available. Should be provided as a string like `30s` or `5m`. Defaults to 5 minutes.","description_kind":"plain","optional":true},"user":{"type":"string","description":"The user that we should use for the connection. Defaults to `root`.","description_kind":"plain","optional":true}},"description_kind":"plain"},"max_items":1}},"description_kind":"plain"}},"linux_script":{"version":0,"block":{"attributes":{"environment":{"type":["map","string"],"description_kind":"plain","optional":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"interpreter":{"type":["list","string"],"description_kind":"plain","optional":true},"output":{"type":"string","description_kind":"plain","computed":true},"sensitive_environment":{"type":["map","string"],"description_kind":"plain","optional":true,"sensitive":true},"working_directory":{"type":"string","description_kind":"plain","optional":true}},"block_types":{"lifecycle_commands":{"nesting_mode":"list","block":{"attributes":{"read":{"type":"string","description_kind":"plain","required":true}},"description_kind":"plain"},"min_items":1,"max_items":1},"provider_override":{"nesting_mode":"list","block":{"attributes":{"agent":{"type":"bool","description":"Set to `false` to disable using ssh-agent to authenticate.","description_kind":"plain","optional":true},"agent_identity":{"type":"string","description":"The preferred identity from the ssh agent for authentication.","description_kind":"plain","optional":true},"bastion_certificate":{"type":"string","description":"The contents of a signed CA Certificate. The certificate argument must be used in conjunction with a `bastion_private_key`. These can be loaded from a file on disk using the the `file` function.","description_kind":"plain","optional":true},"bastion_host":{"type":"string","description":"Setting this enables the bastion Host connection. This host will be connected to first, and then the `host` connection will be made from there.","description_kind":"plain","optional":true},"bastion_host_key":{"type":"string","description":"The public key from the remote host or the signing CA, used to verify the host connection.","description_kind":"plain","optional":true},"bastion_password":{"type":"string","description":"The password we should use for the bastion host. Defaults to the value of the `password` field.","description_kind":"plain","optional":true,"sensitive":true},"bastion_port":{"type":"number","description":"The port to use connect to the bastion host. Defaults to the value of the `port` field.","description_kind":"plain","optional":true},"bastion_private_key":{"type":"string","description":"The contents of an SSH key file to use for the bastion host. These can be loaded from a file on disk using the `file` function. Defaults to the value of the `private_key` field.","description_kind":"plain","optional":true,"sensitive":true},"bastion_user":{"type":"string","description":"The user for the connection to the bastion host. Defaults to the value of the `user` field.","description_kind":"plain","optional":true},"certificate":{"type":"string","description":"The contents of a signed CA Certificate. The certificate argument must be used in conjunction with a `private_key`. These can be loaded from a file on disk using the the `file` function.","description_kind":"plain","optional":true},"host":{"type":"string","description":"The address of the resource to connect to.","description_kind":"plain","optional":true},"host_key":{"type":"string","description":"The public key from the remote host or the signing CA, used to verify the connection.","description_kind":"plain","optional":true},"id":{"type":"string","description":"Connection instance ID for locking purpose when defined in resource/datasource","description_kind":"plain","required":true},"password":{"type":"string","description":"The password we should use for the connection.","description_kind":"plain","optional":true,"sensitive":true},"port":{"type":"number","description":"The port to connect to. Defaults to `22`.","description_kind":"plain","optional":true},"private_key":{"type":"string","description":"The contents of an SSH key to use for the connection. These can be loaded from a file on disk using the `file` function. This takes preference over the `password` if provided.","description_kind":"plain","optional":true,"sensitive":true},"script_path":{"type":"string","description":"The path used to copy scripts meant for remote execution.","description_kind":"plain","optional":true},"timeout":{"type":"string","description":" The timeout to wait for the connection to become available. Should be provided as a string like `30s` or `5m`. Defaults to 5 minutes.","description_kind":"plain","optional":true},"user":{"type":"string","description":"The user that we should use for the connection. Defaults to `root`.","description_kind":"plain","optional":true}},"description_kind":"plain"},"max_items":1}},"description_kind":"plain"}}}}}}
