{"format_version":"0.2","provider_schemas":{"registry.terraform.io/semmulder/postgresql":{"provider":{"version":0,"block":{"attributes":{"connect_timeout":{"type":"number","description":"Maximum wait for connection, in seconds. Zero or not specified means wait indefinitely.","description_kind":"plain","optional":true},"database":{"type":"string","description":"The name of the database to connect to in order to conenct to (defaults to `postgres`).","description_kind":"plain","optional":true},"database_username":{"type":"string","description":"Database username associated to the connected user (for user name maps)","description_kind":"plain","optional":true},"expected_version":{"type":"string","description":"Specify the expected version of PostgreSQL.","description_kind":"plain","optional":true},"host":{"type":"string","description":"Name of PostgreSQL server address to connect to","description_kind":"plain","optional":true},"max_connections":{"type":"number","description":"Maximum number of connections to establish to the database. Zero means unlimited.","description_kind":"plain","optional":true},"password":{"type":"string","description":"Password to be used if the PostgreSQL server demands password authentication","description_kind":"plain","optional":true,"sensitive":true},"port":{"type":"number","description":"The PostgreSQL port number to connect to at the server host, or socket file name extension for Unix-domain connections","description_kind":"plain","optional":true},"scheme":{"type":"string","description_kind":"plain","optional":true},"ssl_mode":{"type":"string","description_kind":"plain","optional":true},"sslmode":{"type":"string","description":"This option determines whether or with what priority a secure SSL TCP/IP connection will be negotiated with the PostgreSQL server","description_kind":"plain","optional":true},"sslrootcert":{"type":"string","description":"The SSL server root certificate file path. The file must contain PEM encoded data.","description_kind":"plain","optional":true},"superuser":{"type":"bool","description":"Specify if the user to connect as is a Postgres superuser or not.If not, some feature might be disabled (e.g.: Refreshing state password from Postgres)","description_kind":"plain","optional":true},"username":{"type":"string","description":"PostgreSQL user name to connect as","description_kind":"plain","optional":true}},"block_types":{"azure_ad_authentication":{"nesting_mode":"list","block":{"attributes":{"client_certificate_password":{"type":"string","description_kind":"plain","optional":true},"client_certificate_path":{"type":"string","description":"The path to the Client Certificate associated with the Service Principal for use when authenticating as a Service Principal using a Client Certificate.","description_kind":"plain","optional":true},"client_id":{"type":"string","description":"The Client ID which should be used for service principal authentication.","description_kind":"plain","optional":true},"client_secret":{"type":"string","description":"The password to decrypt the Client Certificate. For use when authenticating as a Service Principal using a Client Certificate","description_kind":"plain","optional":true},"environment":{"type":"string","description":"The Cloud Environment which should be used. Possible values are `public`, `usgovernment`, `german`, and `china`. Defaults to `public`.","description_kind":"plain","optional":true},"metadata_host":{"type":"string","description":"The Hostname which should be used for the Azure Metadata Service.","description_kind":"plain","optional":true},"msi_endpoint":{"type":"string","description":"The path to a custom endpoint for Managed Service Identity - in most circumstances this should be detected automatically. ","description_kind":"plain","optional":true},"tenant_id":{"type":"string","description":"The Tenant ID which should be used. Works with all authentication methods except MSI.","description_kind":"plain","optional":true},"use_msi":{"type":"bool","description":"Allow Managed Service Identity to be used for Authentication.","description_kind":"plain","optional":true}},"description_kind":"plain"},"max_items":1},"clientcert":{"nesting_mode":"list","block":{"attributes":{"cert":{"type":"string","description":"The SSL client certificate file path. The file must contain PEM encoded data.","description_kind":"plain","required":true},"key":{"type":"string","description":"The SSL client certificate private key file path. The file must contain PEM encoded data.","description_kind":"plain","required":true}},"description_kind":"plain"},"max_items":1}},"description_kind":"plain"}},"resource_schemas":{"postgresql_database":{"version":0,"block":{"attributes":{"allow_connections":{"type":"bool","description":"If false then no one can connect to this database","description_kind":"plain","optional":true},"connection_limit":{"type":"number","description":"How many concurrent connections can be made to this database","description_kind":"plain","optional":true},"encoding":{"type":"string","description":"Character set encoding to use in the new database","description_kind":"plain","optional":true,"computed":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"is_template":{"type":"bool","description":"If true, then this database can be cloned by any user with CREATEDB privileges","description_kind":"plain","optional":true,"computed":true},"lc_collate":{"type":"string","description":"Collation order (LC_COLLATE) to use in the new database","description_kind":"plain","optional":true,"computed":true},"lc_ctype":{"type":"string","description":"Character classification (LC_CTYPE) to use in the new database","description_kind":"plain","optional":true,"computed":true},"name":{"type":"string","description":"The PostgreSQL database name to connect to","description_kind":"plain","required":true},"owner":{"type":"string","description":"The ROLE which owns the database","description_kind":"plain","optional":true,"computed":true},"tablespace_name":{"type":"string","description":"The name of the tablespace that will be associated with the new database","description_kind":"plain","optional":true,"computed":true},"template":{"type":"string","description":"The name of the template from which to create the new database","description_kind":"plain","optional":true,"computed":true}},"description_kind":"plain"}},"postgresql_default_privileges":{"version":0,"block":{"attributes":{"database":{"type":"string","description":"The database to grant default privileges for this role","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"object_type":{"type":"string","description":"The PostgreSQL object type to set the default privileges on (one of: table, sequence, function, type)","description_kind":"plain","required":true},"owner":{"type":"string","description":"Target role for which to alter default privileges.","description_kind":"plain","required":true},"privileges":{"type":["set","string"],"description":"The list of privileges to apply as default privileges","description_kind":"plain","required":true},"role":{"type":"string","description":"The name of the role to which grant default privileges on","description_kind":"plain","required":true},"schema":{"type":"string","description":"The database schema to set default privileges for this role","description_kind":"plain","required":true}},"description_kind":"plain"}},"postgresql_extension":{"version":0,"block":{"attributes":{"database":{"type":"string","description":"Sets the database to add the extension to","description_kind":"plain","optional":true,"computed":true},"drop_cascade":{"type":"bool","description":"When true, will also drop all the objects that depend on the extension, and in turn all objects that depend on those objects","description_kind":"plain","optional":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"name":{"type":"string","description_kind":"plain","required":true},"schema":{"type":"string","description":"Sets the schema of an extension","description_kind":"plain","optional":true,"computed":true},"version":{"type":"string","description":"Sets the version number of the extension","description_kind":"plain","optional":true,"computed":true}},"description_kind":"plain"}},"postgresql_grant":{"version":0,"block":{"attributes":{"database":{"type":"string","description":"The database to grant privileges on for this role","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"object_type":{"type":"string","description":"The PostgreSQL object type to grant the privileges on (one of: database, function, schema, sequence, table)","description_kind":"plain","required":true},"privileges":{"type":["set","string"],"description":"The list of privileges to grant","description_kind":"plain","required":true},"role":{"type":"string","description":"The name of the role to grant privileges on","description_kind":"plain","required":true},"schema":{"type":"string","description":"The database schema to grant privileges on for this role","description_kind":"plain","optional":true},"with_grant_option":{"type":"bool","description":"Permit the grant recipient to grant it to others","description_kind":"plain","optional":true}},"description_kind":"plain"}},"postgresql_grant_role":{"version":0,"block":{"attributes":{"grant_role":{"type":"string","description":"The name of the role that is granted to role","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"role":{"type":"string","description":"The name of the role to grant grant_role","description_kind":"plain","required":true},"with_admin_option":{"type":"bool","description":"Permit the grant recipient to grant it to others","description_kind":"plain","optional":true}},"description_kind":"plain"}},"postgresql_role":{"version":0,"block":{"attributes":{"bypass_row_level_security":{"type":"bool","description":"Determine whether a role bypasses every row-level security (RLS) policy","description_kind":"plain","optional":true},"connection_limit":{"type":"number","description":"How many concurrent connections can be made with this role","description_kind":"plain","optional":true},"create_database":{"type":"bool","description":"Define a role's ability to create databases","description_kind":"plain","optional":true},"create_role":{"type":"bool","description":"Determine whether this role will be permitted to create new roles","description_kind":"plain","optional":true},"encrypted":{"type":"string","description_kind":"plain","optional":true},"encrypted_password":{"type":"bool","description":"Control whether the password is stored encrypted in the system catalogs","description_kind":"plain","optional":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"inherit":{"type":"bool","description":"Determine whether a role \"inherits\" the privileges of roles it is a member of","description_kind":"plain","optional":true},"login":{"type":"bool","description":"Determine whether a role is allowed to log in","description_kind":"plain","optional":true},"name":{"type":"string","description":"The name of the role","description_kind":"plain","required":true},"password":{"type":"string","description":"Sets the role's password","description_kind":"plain","optional":true,"sensitive":true},"replication":{"type":"bool","description":"Determine whether a role is allowed to initiate streaming replication or put the system in and out of backup mode","description_kind":"plain","optional":true},"roles":{"type":["set","string"],"description":"Role(s) to grant to this new role","description_kind":"plain","optional":true},"search_path":{"type":["list","string"],"description":"Sets the role's search path","description_kind":"plain","optional":true},"skip_drop_role":{"type":"bool","description":"Skip actually running the DROP ROLE command when removing a ROLE from PostgreSQL","description_kind":"plain","optional":true},"skip_reassign_owned":{"type":"bool","description":"Skip actually running the REASSIGN OWNED command when removing a role from PostgreSQL","description_kind":"plain","optional":true},"statement_timeout":{"type":"number","description":"Abort any statement that takes more than the specified number of milliseconds","description_kind":"plain","optional":true},"superuser":{"type":"bool","description":"Determine whether the new role is a \"superuser\"","description_kind":"plain","optional":true},"valid_until":{"type":"string","description":"Sets a date and time after which the role's password is no longer valid","description_kind":"plain","optional":true}},"description_kind":"plain"}},"postgresql_schema":{"version":0,"block":{"attributes":{"database":{"type":"string","description":"The database name to alter schema","description_kind":"plain","optional":true,"computed":true},"drop_cascade":{"type":"bool","description":"When true, will also drop all the objects that are contained in the schema","description_kind":"plain","optional":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"if_not_exists":{"type":"bool","description":"When true, use the existing schema if it exists","description_kind":"plain","optional":true},"name":{"type":"string","description":"The name of the schema","description_kind":"plain","required":true},"owner":{"type":"string","description":"The ROLE name who owns the schema","description_kind":"plain","optional":true,"computed":true}},"block_types":{"policy":{"nesting_mode":"set","block":{"attributes":{"create":{"type":"bool","description":"If true, allow the specified ROLEs to CREATE new objects within the schema(s)","description_kind":"plain","optional":true},"create_with_grant":{"type":"bool","description":"If true, allow the specified ROLEs to CREATE new objects within the schema(s) and GRANT the same CREATE privilege to different ROLEs","description_kind":"plain","optional":true},"role":{"type":"string","description":"ROLE who will receive this policy (default: PUBLIC)","description_kind":"plain","optional":true},"usage":{"type":"bool","description":"If true, allow the specified ROLEs to use objects within the schema(s)","description_kind":"plain","optional":true},"usage_with_grant":{"type":"bool","description":"If true, allow the specified ROLEs to use objects within the schema(s) and GRANT the same USAGE privilege to different ROLEs","description_kind":"plain","optional":true}},"description_kind":"plain"}}},"description_kind":"plain"}}}}}}
