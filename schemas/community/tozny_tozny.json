{"format_version":"0.2","provider_schemas":{"registry.terraform.io/tozny/tozny":{"provider":{"version":0,"block":{"attributes":{"account_password":{"type":"string","description":"Tozny account password. Used to derive client credentials where appropriate.","description_kind":"plain","optional":true,"sensitive":true},"account_username":{"type":"string","description":"Tozny account username. Used to derive client credentials where appropriate.","description_kind":"plain","optional":true},"api_endpoint":{"type":"string","description":"Network location for API management and provisioning of Tozny products \u0026 services.","description_kind":"plain","optional":true},"tozny_credentials_json_filepath":{"type":"string","description":"Filepath to Tozny client credentials in JSON format.","description_kind":"plain","optional":true,"sensitive":true}},"description_kind":"plain"}},"resource_schemas":{"tozny_account":{"version":0,"block":{"attributes":{"account_credentials_filepath":{"type":"string","description":"The filepath where account credentials will be loaded from.","description_kind":"plain","optional":true},"autogenerate_account_credentials":{"type":"bool","description":"Whether Terraform should generate credentials for a provisioned account.","description_kind":"plain","optional":true},"client_credentials_save_filepath":{"type":"string","description":"The filepath where client credentials will be persisted.","description_kind":"plain","optional":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true}},"block_types":{"account":{"nesting_mode":"list","block":{"attributes":{"company":{"type":"string","description":"Billing name of the account holder's organization.","description_kind":"plain","optional":true},"plan":{"type":"string","description":"Tozny Billing plan associated with the account.","description_kind":"plain","optional":true}},"block_types":{"public_key":{"nesting_mode":"list","block":{"attributes":{"ed25519_public_key":{"type":"string","description":"A public key from a keypair based off the Ed25519 curve.","description_kind":"plain","optional":true},"p384_public_key":{"type":"string","description":"A public key from a keypair based off the P384 curve.","description_kind":"plain","optional":true}},"description":"The public key of the keypair used for account level encryption operations.","description_kind":"plain"},"min_items":1,"max_items":1},"signing_key":{"nesting_mode":"list","block":{"attributes":{"ed25519_public_key":{"type":"string","description":"A public key from a keypair based off the Ed25519 curve.","description_kind":"plain","required":true}},"description":"The public key of the keypair used for account level signing operations.","description_kind":"plain"},"min_items":1,"max_items":1}},"description":"Account wide settings.","description_kind":"plain"},"max_items":1},"profile":{"nesting_mode":"list","block":{"attributes":{"account_id":{"type":"string","description":"The unique server defined identifier for the account.","description_kind":"plain","computed":true},"authentication_salt":{"type":"string","description":"The salt used to generate the authentication keypair.","description_kind":"plain","required":true},"email":{"type":"string","description":"The email for the account registration profile.","description_kind":"plain","required":true},"encoding_salt":{"type":"string","description":"The salt used to generate the encryption keypair.","description_kind":"plain","required":true},"name":{"type":"string","description":"User defined identifier for the account registration profile.","description_kind":"plain","optional":true,"computed":true},"paper_authentication_salt":{"type":"string","description":"The salt used to generate the paper authentication keypair.","description_kind":"plain","required":true},"paper_encoding_salt":{"type":"string","description":"The salt used to generate the paper encoding keypair.","description_kind":"plain","required":true},"verified":{"type":"bool","description":"Whether or not the email for the account profile has been verified.","description_kind":"plain","computed":true}},"block_types":{"paper_signing_key":{"nesting_mode":"list","block":{"attributes":{"ed25519_public_key":{"type":"string","description":"A public key from a keypair based off the Ed25519 curve.","description_kind":"plain","required":true}},"description":"The paper public key generated using the authentication salt used to generate the encryption keypair.","description_kind":"plain"},"min_items":1,"max_items":1},"signing_key":{"nesting_mode":"list","block":{"attributes":{"ed25519_public_key":{"type":"string","description":"A public key from a keypair based off the Ed25519 curve.","description_kind":"plain","required":true}},"description":"The public key generated using the authentication salt used to generate the encryption keypair.","description_kind":"plain"},"min_items":1,"max_items":1}},"description":"The account creator's profile settings.","description_kind":"plain"},"max_items":1}},"description_kind":"plain"}},"tozny_client_registration_token":{"version":0,"block":{"attributes":{"allowed_registration_client_types":{"type":["list","string"],"description":"The client types that can be registered using the token. Valid types are `general`, `identity`, and `broker`","description_kind":"plain","required":true},"client_credentials_filepath":{"type":"string","description":"The filepath to Tozny client credentials for the provider to use when provisioning this registration token.","description_kind":"plain","optional":true},"enabled":{"type":"bool","description":"Whether the clients can be registered using this token.","description_kind":"plain","optional":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"name":{"type":"string","description":"User defined identifier for the token.","description_kind":"plain","required":true},"one_time_use":{"type":"bool","description":"Whether the token is only valid for registering a single client.","description_kind":"plain","optional":true},"token":{"type":"string","description":"Client registration token.","description_kind":"plain","computed":true,"sensitive":true}},"description_kind":"plain"}},"tozny_realm":{"version":0,"block":{"attributes":{"active":{"type":"bool","description":"Whether the realm is active for applications and identities to consume.","description_kind":"plain","computed":true},"admin_url":{"type":"string","description":"URL for realm administration console.","description_kind":"plain","computed":true},"broker_identity_tozny_id":{"type":"string","description":"The Tozny Client ID associated with the Identity used to broker interactions between the realm and it's Identities. Will be empty if no realm broker Identity has been registered.","description_kind":"plain","computed":true},"client_credentials_filepath":{"type":"string","description":"The filepath to Tozny client credentials for the provider to use when provisioning this realm.","description_kind":"plain","optional":true},"default_registration_token":{"type":"string","description":"The default registration token to use for registering new Identities with this Realm","description_kind":"plain","optional":true},"domain":{"type":"string","description":"Service defined \u0026 externally unique reference for the realm.","description_kind":"plain","computed":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"realm_id":{"type":"number","description":"Service defined unique identifier for the realm.","description_kind":"plain","computed":true},"realm_name":{"type":"string","description":"User defined identifier for the realm.","description_kind":"plain","optional":true,"computed":true},"sovereign":{"type":["list",["object",{"id":"number","name":"string"}]],"description":"The admin identity for a realm.","description_kind":"plain","computed":true},"sovereign_name":{"type":"string","description":"User defined sovereign identifier.","description_kind":"plain","optional":true}},"description_kind":"plain"}},"tozny_realm_application":{"version":0,"block":{"attributes":{"active":{"type":"bool","description":"Whether this consumer is allowed to authenticate and authorize identities.","description_kind":"plain","optional":true},"application_id":{"type":"string","description":"Server defined unique identifier for the Application.","description_kind":"plain","computed":true},"client_credentials_filepath":{"type":"string","description":"The filepath to Tozny client credentials for the provider to use when provisioning this application.","description_kind":"plain","optional":true},"client_id":{"type":"string","description":"The external id for clients to reference when communicating with this application.","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"name":{"type":"string","description":"Human readable/reference-able name for the application.","description_kind":"plain","required":true},"protocol":{"type":"string","description":"What protocol (e.g. OpenIDConnect or SAML) is used to authenticate with the application.","description_kind":"plain","required":true},"realm_name":{"type":"string","description":"The name of the Realm to provision the Application for.","description_kind":"plain","required":true}},"block_types":{"oidc_settings":{"nesting_mode":"list","block":{"attributes":{"access_type":{"type":"string","description":"The OIDC access type.","description_kind":"plain","optional":true},"allowed_origins":{"type":["list","string"],"description":"The list of network locations that are allowed to be used by clients when accessing this application.","description_kind":"plain","optional":true},"base_url":{"type":"string","description":"The OIDC base URL.","description_kind":"plain","optional":true},"direct_access_grants_enabled":{"type":"bool","description":"Whether for OIDC flows direct access grants are enabled.","description_kind":"plain","optional":true},"implicit_flow_enabled":{"type":"bool","description":"Whether the OIDC implicit flow is enabled","description_kind":"plain","optional":true},"root_url":{"type":"string","description":"The URL to append to any relative URLs.","description_kind":"plain","optional":true},"standard_flow_enabled":{"type":"bool","description":"Whether the OIDC standard flow is enabled","description_kind":"plain","optional":true}},"description":"Settings for an OIDC protocol based application.","description_kind":"plain"}},"saml_settings":{"nesting_mode":"list","block":{"attributes":{"allowed_origins":{"type":["list","string"],"description":"The list of network locations that are allowed to be used by clients when accessing this application.","description_kind":"plain","optional":true},"assertion_consumer_service_post_binding_url":{"type":"string","description":"The assertion consumer service post bind URL.","description_kind":"plain","optional":true},"client_signature_required":{"type":"bool","description":"Whether client signature is required.","description_kind":"plain","optional":true},"default_endpoint":{"type":"string","description":"URL used for every binding to both the SP's Assertion Consumer and Single Logout Services. This can be individually overridden for each binding and service.","description_kind":"plain","optional":true},"force_name_id_format":{"type":"bool","description":"Whether to force name ID format.","description_kind":"plain","optional":true},"force_post_binding":{"type":"bool","description":"Whether to force POST binding.","description_kind":"plain","optional":true},"idp_initiated_sso_url_name":{"type":"string","description":"The IDP initiated SSO URL name.","description_kind":"plain","optional":true},"include_authn_statement":{"type":"bool","description":"Whether to include the Authn statement.","description_kind":"plain","optional":true},"include_one_time_use_condition":{"type":"bool","description":"Whether to include the one time use condition.","description_kind":"plain","optional":true},"name_id_format":{"type":"string","description":"The name ID format","description_kind":"plain","optional":true},"sign_assertions":{"type":"bool","description":"Whether to sign assertions.","description_kind":"plain","optional":true},"sign_documents":{"type":"bool","description":"Whether to sign documents.","description_kind":"plain","optional":true}},"description":"Settings for a SAML protocol based application.","description_kind":"plain"}}},"description_kind":"plain"}},"tozny_realm_application_client_secret":{"version":0,"block":{"attributes":{"application_id":{"type":"string","description":"The application ID to retrieve the client secret for.","description_kind":"plain","required":true},"client_credentials_filepath":{"type":"string","description":"The filepath to Tozny client credentials for the Terraform provider to use when provisioning this application client secret.","description_kind":"plain","optional":true},"client_secret_save_filepath":{"type":"string","description":"The filepath to save the client secret to. If not specified the secret will not be saved to the filesystem.","description_kind":"plain","optional":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"persist_client_secret_to_terraform":{"type":"bool","description":"Whether or not the client secret should be persisted to terraform. Defaults to true.","description_kind":"plain","optional":true},"realm_name":{"type":"string","description":"The name of the realm the application is associated with.","description_kind":"plain","required":true},"secret":{"type":"string","description":"OIDC Client secret for the application. Will always be empty if `persist_client_secret_to_terraform` is `false`.","description_kind":"plain","computed":true,"sensitive":true}},"description_kind":"plain"}},"tozny_realm_application_mapper":{"version":0,"block":{"attributes":{"add_to_access_token":{"type":"bool","description":"Indicates if the claim should be added to the access token. Defaults to false.","description_kind":"plain","optional":true},"add_to_id_token":{"type":"bool","description":"Indicates if the claim should be added to the id token. Defaults to false.","description_kind":"plain","optional":true},"add_to_user_info":{"type":"bool","description":"Indicates if the claim should be added to the user info. Defaults to false.","description_kind":"plain","optional":true},"aggregate_attribute_values":{"type":"bool","description":"Indicates if attribute values should be aggregated with the group attributes. If using OpenID Connect mapper the multivalued option needs to be enabled too in order to get all the values. Duplicated values are discarded and the order of values is not guaranteed with this option.","description_kind":"plain","optional":true},"application_id":{"type":"string","description":"ID of the Application the Mapper is associated with.","description_kind":"plain","required":true},"application_mapper_id":{"type":"string","description":"Server defined unique identifier for the Application Mapper.","description_kind":"plain","computed":true},"claim_json_type":{"type":"string","description":"JSON type that should be used to populate the json claim in the token. Valid `String`, `int`, `bool`, `long`.","description_kind":"plain","optional":true},"client_credentials_filepath":{"type":"string","description":"The filepath to Tozny client credentials for the Terraform provider to use when provisioning this realm provider.","description_kind":"plain","required":true},"friendly_name":{"type":"string","description":"Standard SAML attribute setting. An optional, more human-readable form of the attribute's name that can be provided if the actual attribute name is cryptic.","description_kind":"plain","optional":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"mapper_type":{"type":"string","description":"The category of data this mapper is applied to. Valid values are `oidc-user-session-note-mapper`, `oidc-user-attribute-mapper`, `saml-role-list-mapper`, `saml-user-property-mapper`.","description_kind":"plain","required":true},"multivalued":{"type":"bool","description":"Indicates if attribute supports multiple values. If true, then the list of all values of this attribute will be set as claim. If false, then just first value will be set as claim.","description_kind":"plain","optional":true},"name":{"type":"string","description":"User defined name for the application mapper.","description_kind":"plain","required":true},"property":{"type":"string","description":"Name of the property method in the UserModel interface. For example, a value of 'email' would reference the UserModel.getEmail() method.","description_kind":"plain","optional":true},"protocol":{"type":"string","description":"The identity protocol that this mapper will be applied to flows of. Valid values are `openid-connect`, `saml`.","description_kind":"plain","required":true},"realm_name":{"type":"string","description":"The name of the Realm to provision the Application Mapper in.","description_kind":"plain","required":true},"role_attribute_name":{"type":"string","description":"Name of the SAML attribute you want to put your roles into. i.e. 'Role', 'memberOf'.","description_kind":"plain","optional":true},"saml_attribute_name":{"type":"string","description":"Name of the SAML attribute that should be used for mapping an identities name.","description_kind":"plain","optional":true},"saml_attribute_name_format":{"type":"string","description":"Format to use for the name attribute for the SAML protocol, valid values are `Basic` `URI Reference` or `Unspecified`.","description_kind":"plain","optional":true},"single_role_attribute":{"type":"bool","description":"If true, all roles will be stored under one attribute with multiple attribute values.","description_kind":"plain","optional":true},"token_claim_name":{"type":"string","description":"Name of the claim to insert into the token. This can be a fully qualified name like 'address.street'. In this case, a nested json object will be created. To prevent nesting and use dot literally, escape the dot with backslash (\\.)","description_kind":"plain","optional":true},"user_attribute":{"type":"string","description":"Name of stored user attribute within the UserModel.attribute map.","description_kind":"plain","optional":true},"user_session_note":{"type":"string","description":"Name of stored user session note within the UserSessionModel.note map.","description_kind":"plain","optional":true}},"description_kind":"plain"}},"tozny_realm_application_role":{"version":0,"block":{"attributes":{"application_id":{"type":"string","description":"Server defined unique identifier for the Application.","description_kind":"plain","required":true},"application_role_id":{"type":"string","description":"Server defined unique identifier for the Application role.","description_kind":"plain","computed":true},"client_credentials_filepath":{"type":"string","description":"The filepath to Tozny client credentials for the Terraform provider to use when provisioning this realm provider.","description_kind":"plain","required":true},"description":{"type":"string","description":"Human readable description for the application role.","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"name":{"type":"string","description":"Human readable/reference-able name for the application role.","description_kind":"plain","required":true},"realm_name":{"type":"string","description":"The name of the Realm to provision the Application Role for.","description_kind":"plain","required":true}},"description_kind":"plain"}},"tozny_realm_broker_delegation":{"version":0,"block":{"attributes":{"broker_token_record_id":{"type":"string","description":"ID of the  TozStore record containing material to derive the realm broker identity credentials.","description_kind":"plain","computed":true},"client_credentials_filepath":{"type":"string","description":"The filepath to Tozny client credentials for the provider to use when provisioning this broker delegation.","description_kind":"plain","optional":true},"client_id_to_delegate_brokering":{"type":"string","description":"Client ID to delegate realm brokering to.","description_kind":"plain","optional":true},"delegated_broker_client_id":{"type":"string","description":"The ID of the client realm brokering is delegated to.","description_kind":"plain","computed":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"realm_broker_identity_credentials_filepath":{"type":"string","description":"The filepath to load the realm broker identity to delegate access to.","description_kind":"plain","required":true},"use_tozny_hosted_broker":{"type":"bool","description":"Whether to delegate realm brokering to the Tozny Hosted Broker. Defaults to true.","description_kind":"plain","optional":true}},"description_kind":"plain"}},"tozny_realm_broker_identity":{"version":0,"block":{"attributes":{"broker_identity_credentials_save_filepath":{"type":"string","description":"The filepath to persist the provisioned Identities credentials to.","description_kind":"plain","required":true},"client_credentials_filepath":{"type":"string","description":"The filepath to Tozny client credentials for the provider to use when provisioning this brokering Identity.","description_kind":"plain","optional":true},"client_registration_token":{"type":"string","description":"Token to use when registering the Identity's client.","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"identity_client_id":{"type":"string","description":"Server defined unique identifier for the brokering Identity's client.","description_kind":"plain","computed":true},"name":{"type":"string","description":"User defined name for the brokering Identity.","description_kind":"plain","optional":true},"realm_name":{"type":"string","description":"The name of the Realm to register the brokering Identity for.","description_kind":"plain","required":true}},"description_kind":"plain"}},"tozny_realm_group":{"version":0,"block":{"attributes":{"client_credentials_filepath":{"type":"string","description":"The filepath to Tozny client credentials for the Terraform provider to use when provisioning this realm provider.","description_kind":"plain","required":true},"group_id":{"type":"string","description":"Server defined unique identifier for the group.","description_kind":"plain","computed":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"name":{"type":"string","description":"Human readable/reference-able name for the group.","description_kind":"plain","required":true},"realm_name":{"type":"string","description":"The name of the Realm to provision the group for.","description_kind":"plain","required":true}},"description_kind":"plain"}},"tozny_realm_group_role_mappings":{"version":0,"block":{"attributes":{"client_credentials_filepath":{"type":"string","description":"The filepath to Tozny client credentials for the Terraform provider to use when provisioning role mappings for this realm group.","description_kind":"plain","required":true},"group_id":{"type":"string","description":"Server defined unique identifier for the group to provision role mappings for.","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"realm_name":{"type":"string","description":"The name of the Realm associated with the group to provision role mappings for.","description_kind":"plain","required":true}},"block_types":{"application_role":{"nesting_mode":"list","block":{"attributes":{"application_id":{"type":"string","description":"The application ID associated with the application role.","description_kind":"plain","required":true},"role_id":{"type":"string","description":"Service defined unique identifier for the application role.","description_kind":"plain","required":true},"role_name":{"type":"string","description":"User defined unique identifier for the application scoped role.","description_kind":"plain","required":true}},"description":"Configuration for mapping an application role to members of a group.","description_kind":"plain"}},"realm_role":{"nesting_mode":"list","block":{"attributes":{"realm_id":{"type":"string","description":"The realm ID associated with the realm role.","description_kind":"plain","required":true},"role_id":{"type":"string","description":"Service defined unique identifier for the realm role.","description_kind":"plain","required":true},"role_name":{"type":"string","description":"User defined unique identifier for the realm scoped role.","description_kind":"plain","required":true}},"description":"Configuration for mapping a realm role to members of a group.","description_kind":"plain"}}},"description_kind":"plain"}},"tozny_realm_provider":{"version":0,"block":{"attributes":{"active":{"type":"bool","description":"Whether the provider is enabled for syncing identities. Defaults to `true`.","description_kind":"plain","optional":true},"client_credentials_filepath":{"type":"string","description":"The filepath to Tozny client credentials for the Terraform provider to use when provisioning this realm provider.","description_kind":"plain","optional":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"import_identities":{"type":"bool","description":"If true, LDAP identities will be imported into the realm and synced via the configured sync policies. Defaults to `true`.","description_kind":"plain","optional":true},"name":{"type":"string","description":"User defined name for the provider.","description_kind":"plain","required":true},"priority":{"type":"number","description":"Priority for the provider when doing identity lookups for the realm. Lower numbers equal higher priority. Defaults to `0`.","description_kind":"plain","optional":true},"provider_id":{"type":"string","description":"Service defined unique identifier for the provider.","description_kind":"plain","computed":true},"provider_type":{"type":"string","description":"The type of provider. Valid values are `ldap`. Defaults to `ldap`.","description_kind":"plain","optional":true},"realm_name":{"type":"string","description":"The name of the realm to associate the provider with.","description_kind":"plain","required":true}},"block_types":{"connection_settings":{"nesting_mode":"list","block":{"attributes":{"authentication_type":{"type":"string","description":"LDAP Authentication type. Valid values are 'none' (anonymous LDAP authentication) or 'simple' (Bind credential + Bind password authentication).","description_kind":"plain","required":true},"bind_credential":{"type":"string","description":"Password of LDAP admin.","description_kind":"plain","required":true,"sensitive":true},"bind_dn":{"type":"string","description":"DN of LDAP admin, which will be used by the Realm to access LDAP server.","description_kind":"plain","required":true},"connection_pooling":{"type":"bool","description":"Specifies whether the realm use connection pooling for accessing LDAP server.","description_kind":"plain","required":true},"connection_url":{"type":"string","description":"URL for connecting to provider.","description_kind":"plain","required":true},"identity_dn":{"type":"string","description":"Full DN of LDAP tree where your identities are. This DN is parent of LDAP identities. It could be for example 'ou=users,dc=example,dc=com' assuming that your typical identity will have DN like 'uid=john,ou=users,dc=example,dc=com'.","description_kind":"plain","required":true},"identity_name_attribute":{"type":"string","description":"Name of LDAP attribute, which is mapped as the identity name. For many LDAP server vendors it can be 'uid'. For Active directory it can be 'sAMAccountName' or 'cn'. The attribute should be filled for all LDAP identity records you want to import from LDAP to the realm.","description_kind":"plain","required":true},"identity_object_classes":{"type":["list","string"],"description":"All values of LDAP objectClass attribute for identities in LDAP. Newly created Realm identities will be written to LDAP with all those object classes and existing LDAP identity records are found just if they contain all those object classes.","description_kind":"plain","required":true},"pagination":{"type":"bool","description":"Specifies whether the LDAP server to connect to supports pagination.","description_kind":"plain","required":true},"rdn_attribute":{"type":"string","description":"Name of LDAP attribute, which is used as RDN (top attribute) of typical user DN. Usually it's the same as Username LDAP attribute, however it's not required. For example for Active directory it's common to use 'cn' as RDN attribute when username attribute might be 'sAMAccountName'.","description_kind":"plain","required":true},"search_scope":{"type":"number","description":"For one level, we search for users just in DNs specified by Identity DNs. For subtree, we search in whole of their subtree. 1= `One Level` 2 = `Subtree`.","description_kind":"plain","required":true},"trust_store_spi_mode":{"type":"string","description":"Specifies whether LDAP connection will use the truststore SPI with the truststore configured for the Realm. Valid values are `always`, `never`, or `ldapsOnly`.","description_kind":"plain","required":true},"type":{"type":"string","description":"Type of the provider to connect to. Valid values are `ad` (Active Directory), `Red Hat Directory Server`, `Tivoli`, `Novell e Directory` or `other`.","description_kind":"plain","required":true},"uuid_attribute":{"type":"string","description":"Name of LDAP attribute, which is used as unique object identifier (UUID) for objects in LDAP. For many LDAP server vendors it's 'entryUUID' however some are different. For example for Active directory it should be 'objectGUID'. If your LDAP server really doesn't support the notion of UUID, you can use any other attribute, which is supposed to be unique among LDAP users in tree. For example 'uid' or 'entryDN'.","description_kind":"plain","required":true}},"description":"Settings for the realm to use when syncing identities from the provider.","description_kind":"plain"},"min_items":1}},"description_kind":"plain"}},"tozny_realm_provider_mapper":{"version":0,"block":{"attributes":{"client_credentials_filepath":{"type":"string","description":"The filepath to Tozny client credentials for the Terraform provider to use when provisioning this realm provider.","description_kind":"plain","optional":true},"drop_missing_groups_on_sync":{"type":"bool","description":"If this flag is true, then during sync of groups from LDAP to the Realm, we will keep just those Realm groups, which still exists in LDAP. Rest will be deleted.","description_kind":"plain","required":true},"group_name_attribute":{"type":"string","description":"Name of LDAP attribute, which is used in group objects for name and RDN of group. Usually it will be 'cn' . In this case typical group/role object may have DN like 'cn=Group1,ou=groups,dc=example,dc=org'.","description_kind":"plain","required":true},"group_object_classes":{"type":["list","string"],"description":"Object class (or classes) of the group object. In typical LDAP deployment it could be 'groupOfNames' . In Active Directory it's usually 'group'.","description_kind":"plain","required":true},"groups_dn":{"type":"string","description":"LDAP DN where are groups of this tree saved. For example 'ou=groups,dc=example,dc=org'.","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"identity_groups_retrieval_strategy":{"type":"string","description":"Specify how to retrieve groups of user. LOAD_GROUPS_BY_MEMBER_ATTRIBUTE means that roles of user will be retrieved by sending LDAP query to retrieve all groups where 'member' is our user. GET_GROUPS_FROM_USER_MEMBEROF_ATTRIBUTE means that groups of user will be retrieved from 'memberOf' attribute of our user. Or from the other attribute specified by 'Member-Of LDAP Attribute' . LOAD_GROUPS_BY_MEMBER_ATTRIBUTE_RECURSIVELY is applicable just in Active Directory and it means that groups of user will be retrieved recursively with usage of LDAP_MATCHING_RULE_IN_CHAIN Ldap extension.","description_kind":"plain","required":true},"ignore_missing_groups":{"type":"bool","description":"Whether missing groups in the hierarchy should be ignored.","description_kind":"plain","required":true},"member_of_attribute":{"type":"string","description":"Used just when `identity_groups_retrieval_strategy` is GET_GROUPS_FROM_USER_MEMBEROF_ATTRIBUTE . It specifies the name of the LDAP attribute on the LDAP identity, which contains the groups, which the identity is a member of. Usually it will be 'memberOf'.","description_kind":"plain","required":true},"membership_attribute":{"type":"string","description":"Name of LDAP attribute on group, which is used for membership mappings. Usually it will be 'member' .However when 'Membership Attribute Type' is 'UID' then 'Membership LDAP Attribute' could be typically 'memberUid'.","description_kind":"plain","required":true},"membership_attribute_type":{"type":"string","description":"DN means that LDAP group has it's members declared in form of their full DN. For example 'member: uid=john,ou=users,dc=example,dc=com' . UID means that LDAP group has it's members declared in form of pure user uids. For example 'memberUid: john'. Valid values are `DN` or `UID`.","description_kind":"plain","required":true},"membership_identity_attribute":{"type":"string","description":"Used just if Membership Attribute Type is UID. It is name of LDAP attribute on user, which is used for membership mappings. Usually it will be 'uid' . For example if value of 'Membership User LDAP Attribute' is 'uid' and LDAP group has 'memberUid: john', then it is expected that particular LDAP user will have attribute 'uid: john'.","description_kind":"plain","required":true},"mode":{"type":"string","description":"LDAP_ONLY means that all group mappings of users are retrieved from LDAP and saved into LDAP. READ_ONLY is Read-only LDAP mode where group mappings are retrieved from both LDAP and DB and merged together. New group joins are not saved to LDAP but to the Realm. IMPORT is Read-only LDAP mode where group mappings are retrieved from LDAP just at the time when user is imported from LDAP and then they are saved to the realm.","description_kind":"plain","required":true},"name":{"type":"string","description":"User defined name for the provider mapper.","description_kind":"plain","required":true},"preserve_group_inheritance":{"type":"bool","description":"Flag whether group inheritance from LDAP should be propagated to the Realm. If false, then all LDAP groups will be mapped as flat top-level groups in the Realm. Otherwise group inheritance is preserved into the Realm, but the group sync might fail if LDAP structure contains recursions or multiple parent groups per child groups.","description_kind":"plain","required":true},"provider_id":{"type":"string","description":"Service defined unique identifier for the provider to associate the mapper with.","description_kind":"plain","required":true},"provider_mapper_id":{"type":"string","description":"Service defined unique identifier for the provider mapper.","description_kind":"plain","computed":true},"provider_type":{"type":"string","description":"The type of the provider mapper. Valid values are `msad-user-account-control-mapper`, `msad-lds-user-account-control-mapper`, `group-ldap-mapper`, `user-attribute-ldap-mapper`, `role-ldap-mapper`, `hardcoded-ldap-role-mapper`, `full-name-ldap-mapper`, `hardcoded-ldap-group-mapper`, `hardcoded-ldap-attribute-mapper`.","description_kind":"plain","required":true},"realm_name":{"type":"string","description":"The name of the realm to associate the provider with.","description_kind":"plain","required":true}},"description_kind":"plain"}},"tozny_realm_role":{"version":0,"block":{"attributes":{"client_credentials_filepath":{"type":"string","description":"The filepath to Tozny client credentials for the Terraform provider to use when provisioning this realm provider.","description_kind":"plain","required":true},"description":{"type":"string","description":"Human readable description for the realm role.","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"name":{"type":"string","description":"Human readable/reference-able name for the realm role.","description_kind":"plain","required":true},"realm_name":{"type":"string","description":"The name of the Realm to provision the realm Role for.","description_kind":"plain","required":true},"realm_role_id":{"type":"string","description":"Server defined unique identifier for the realm role.","description_kind":"plain","computed":true},"role_realm_id":{"type":"string","description":"Server defined unique identifier for the realm associated with the role.","description_kind":"plain","computed":true}},"description_kind":"plain"}}},"data_source_schemas":{"tozny_realm_application_saml_description":{"version":0,"block":{"attributes":{"application_id":{"type":"string","description":"The application ID to retrieve the SAML description for.","description_kind":"plain","required":true},"client_credentials_filepath":{"type":"string","description":"The filepath to Tozny client credentials for the Terraform provider to use when fetching this application's SAML description.","description_kind":"plain","optional":true},"description":{"type":"string","description":"SAML XML description document.","description_kind":"plain","computed":true,"sensitive":true},"description_save_filepath":{"type":"string","description":"The filepath to save the SAML description to.","description_kind":"plain","required":true},"format":{"type":"string","description":"The format of the description to retrieve.","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"realm_name":{"type":"string","description":"The name of the realm the application is associated with.","description_kind":"plain","required":true}},"description_kind":"plain"}}}}}}
