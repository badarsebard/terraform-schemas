{"format_version":"0.2","provider_schemas":{"registry.terraform.io/timofurrer/gitlab-repository-files":{"provider":{"version":0,"block":{"attributes":{"base_url":{"type":"string","description":"The GitLab Base API URL","description_kind":"markdown","optional":true},"cacert_file":{"type":"string","description":"A file containing the ca certificate to use in case ssl certificate is not from a standard chain","description_kind":"markdown","optional":true},"client_cert":{"type":"string","description":"File path to client certificate when GitLab instance is behind company proxy. File  must contain PEM encoded data.","description_kind":"markdown","optional":true},"client_key":{"type":"string","description":"File path to client key when GitLab instance is behind company proxy. File must contain PEM encoded data.","description_kind":"markdown","optional":true},"insecure":{"type":"bool","description":"Disable SSL verification of API calls","description_kind":"markdown","optional":true},"token":{"type":"string","description":"The OAuth2 token or project/personal access token used to connect to GitLab.","description_kind":"markdown","required":true}},"description_kind":"plain"}},"resource_schemas":{"gitlab-repository-files_gitlab_repository_file":{"version":0,"block":{"attributes":{"author_email":{"type":"string","description":"The email address of the commit author.","description_kind":"markdown","optional":true},"author_name":{"type":"string","description":"The name of the commit author.","description_kind":"markdown","optional":true},"branch":{"type":"string","description":"The name of the branch to which to commit to.","description_kind":"markdown","required":true},"commit_message":{"type":"string","description":"The commit message.","description_kind":"markdown","required":true},"content":{"type":"string","description":"The content of the file. It must be base64 encoded.","description_kind":"markdown","required":true},"file_path":{"type":"string","description":"The full path of the file. It must be relative to the root of the project without a leading slash `/`.","description_kind":"markdown","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"overwrite_on_create":{"type":"bool","description":"If the file should be overwritten if it does already exist in the repository but not in the state.","description_kind":"markdown","optional":true},"project":{"type":"string","description":"The ID of the project.","description_kind":"markdown","required":true},"start_branch":{"type":"string","description":"Name of the branch to start the new commit from.","description_kind":"markdown","optional":true}},"description":"This resource allows you to create and manage GitLab repository files\n\n**Limitations**:\n\nThe [GitLab Repository Files API](https://docs.gitlab.com/ee/api/repository_files.html)\ncan only create, update or delete a single file at the time.\nThe API will also\n[fail with a 400](https://docs.gitlab.com/ee/api/repository_files.html#update-existing-file-in-repository)\nresponse status code if the underlying repository is changed while the API tries to make changes.\nTherefore, it's recommended to make sure that you execute it with\n[-parallelism=1](https://www.terraform.io/docs/cli/commands/apply.html#parallelism-n)\nand that no other entity than the terraform at hand makes changes to the\nunderlying repository while it's executing.\n\n```hcl\nresource \"gitlab-repository-files_gitlab_repository_file\" \"this\" {\n\tproject        = gitlab_project.foo.id\n\tfile_path      = \"meow.txt\"\n\tbranch         = \"main\"\n\tcontent        = base64encode(\"hello world\")\n\tauthor_email   = \"meow@catnip.com\"\n\tauthor_name    = \"Meow Meowington\"\n\tcommit_message = \"feature: add launch codes\"\n}\n```","description_kind":"markdown"}}}}}}
