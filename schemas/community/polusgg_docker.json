{"format_version":"0.2","provider_schemas":{"registry.terraform.io/polusgg/docker":{"provider":{"version":0,"block":{"description_kind":"plain"}},"resource_schemas":{"docker_container":{"version":2,"block":{"attributes":{"attach":{"type":"bool","description":"If `true` attach to the container after its creation and waits the end of its execution. Defaults to `false`.","description_kind":"markdown","optional":true},"bridge":{"type":"string","description":"The network bridge of the container as read from its NetworkSettings.","description_kind":"markdown","computed":true},"command":{"type":["list","string"],"description":"The command to use to start the container. For example, to run `/usr/bin/myprogram -f baz.conf` set the command to be `[\"/usr/bin/myprogram\",\"-\",\"baz.con\"]`.","description_kind":"markdown","optional":true,"computed":true},"container_logs":{"type":"string","description":"The logs of the container if its execution is done (`attach` must be disabled).","description_kind":"markdown","computed":true},"cpu_set":{"type":"string","description":"A comma-separated list or hyphen-separated range of CPUs a container can use, e.g. `0-1`.","description_kind":"markdown","optional":true},"cpu_shares":{"type":"number","description":"CPU shares (relative weight) for the container.","description_kind":"markdown","optional":true},"destroy_grace_seconds":{"type":"number","description":"If defined will attempt to stop the container before destroying. Container will be destroyed after `n` seconds or on successful stop.","description_kind":"markdown","optional":true},"dns":{"type":["set","string"],"description":"DNS servers to use.","description_kind":"markdown","optional":true},"dns_opts":{"type":["set","string"],"description":"DNS options used by the DNS provider(s), see `resolv.conf` documentation for valid list of options.","description_kind":"markdown","optional":true},"dns_search":{"type":["set","string"],"description":"DNS search domains that are used when bare unqualified hostnames are used inside of the container.","description_kind":"markdown","optional":true},"domainname":{"type":"string","description":"Domain name of the container.","description_kind":"markdown","optional":true},"entrypoint":{"type":["list","string"],"description":"The command to use as the Entrypoint for the container. The Entrypoint allows you to configure a container to run as an executable. For example, to run `/usr/bin/myprogram` when starting a container, set the entrypoint to be `\"/usr/bin/myprogra\"]`.","description_kind":"markdown","optional":true,"computed":true},"env":{"type":["set","string"],"description":"Environment variables to set in the form of `KEY=VALUE`, e.g. `DEBUG=0`","description_kind":"markdown","optional":true,"computed":true},"exit_code":{"type":"number","description":"The exit code of the container if its execution is done (`must_run` must be disabled).","description_kind":"markdown","computed":true},"gateway":{"type":"string","description":"The network gateway of the container.","description_kind":"markdown","deprecated":true,"computed":true},"group_add":{"type":["set","string"],"description":"Additional groups for the container user","description_kind":"markdown","optional":true},"hostname":{"type":"string","description":"Hostname of the container.","description_kind":"markdown","optional":true,"computed":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"image":{"type":"string","description":"The ID of the image to back this container. The easiest way to get this value is to use the `docker_image` resource as is shown in the example.","description_kind":"markdown","required":true},"init":{"type":"bool","description":"Configured whether an init process should be injected for this container. If unset this will default to the `dockerd` defaults.","description_kind":"markdown","optional":true,"computed":true},"ip_address":{"type":"string","description":"The IP address of the container.","description_kind":"markdown","deprecated":true,"computed":true},"ip_prefix_length":{"type":"number","description":"The IP prefix length of the container.","description_kind":"markdown","deprecated":true,"computed":true},"ipc_mode":{"type":"string","description":"IPC sharing mode for the container. Possible values are: `none`, `private`, `shareable`, `container:\u003cname|id\u003e` or `host`.","description_kind":"markdown","optional":true,"computed":true},"links":{"type":["set","string"],"description":"Set of links for link based connectivity between containers that are running on the same host.","description_kind":"markdown","deprecated":true,"optional":true},"log_driver":{"type":"string","description":"The logging driver to use for the container. Defaults to `json-file`.","description_kind":"markdown","optional":true},"log_opts":{"type":["map","string"],"description":"Key/value pairs to use as options for the logging driver.","description_kind":"markdown","optional":true},"logs":{"type":"bool","description":"Save the container logs (`attach` must be enabled). Defaults to `false`.","description_kind":"markdown","optional":true},"max_retry_count":{"type":"number","description":"The maximum amount of times to an attempt a restart when `restart` is set to 'on-failure'.","description_kind":"markdown","optional":true},"memory":{"type":"number","description":"The memory limit for the container in MBs.","description_kind":"markdown","optional":true},"memory_swap":{"type":"number","description":"The total memory limit (memory + swap) for the container in MBs. This setting may compute to `-1` after `terraform apply` if the target host doesn't support memory swap, when that is the case docker will use a soft limitation.","description_kind":"markdown","optional":true},"must_run":{"type":"bool","description":"If `true`, then the Docker container will be kept running. If `false`, then as long as the container exists, Terraform assumes it is successful. Defaults to `true`.","description_kind":"markdown","optional":true},"name":{"type":"string","description":"The name of the container.","description_kind":"markdown","required":true},"network_alias":{"type":["set","string"],"description":"Set an alias for the container in all specified networks","description_kind":"markdown","deprecated":true,"optional":true},"network_data":{"type":["list",["object",{"gateway":"string","global_ipv6_address":"string","global_ipv6_prefix_length":"number","ip_address":"string","ip_prefix_length":"number","ipv6_gateway":"string","network_name":"string"}]],"description":"The data of the networks the container is connected to.","description_kind":"markdown","computed":true},"network_mode":{"type":"string","description":"Network mode of the container.","description_kind":"markdown","optional":true},"networks":{"type":["set","string"],"description":"ID of the networks in which the container is.","description_kind":"markdown","deprecated":true,"optional":true},"pid_mode":{"type":"string","description":"he PID (Process) Namespace mode for the container. Either `container:\u003cname|id\u003e` or `host`.","description_kind":"markdown","optional":true},"privileged":{"type":"bool","description":"If `true`, the container runs in privileged mode.","description_kind":"markdown","optional":true},"publish_all_ports":{"type":"bool","description":"Publish all ports of the container.","description_kind":"markdown","optional":true},"read_only":{"type":"bool","description":"If `true`, the container will be started as readonly. Defaults to `false`.","description_kind":"markdown","optional":true},"remove_volumes":{"type":"bool","description":"If `true`, it will remove anonymous volumes associated with the container. Defaults to `true`.","description_kind":"markdown","optional":true},"restart":{"type":"string","description":"The restart policy for the container. Must be one of 'no', 'on-failure', 'always', 'unless-stopped'. Defaults to `no`.","description_kind":"markdown","optional":true},"rm":{"type":"bool","description":"If `true`, then the container will be automatically removed after his execution. Terraform won't check this container after creation. Defaults to `false`.","description_kind":"markdown","optional":true},"security_opts":{"type":["set","string"],"description":"List of string values to customize labels for MLS systems, such as SELinux. See https://docs.docker.com/engine/reference/run/#security-configuration.","description_kind":"markdown","optional":true,"computed":true},"shm_size":{"type":"number","description":"Size of `/dev/shm` in MBs.","description_kind":"markdown","optional":true,"computed":true},"start":{"type":"bool","description":"If `true`, then the Docker container will be started after creation. If `false`, then the container is only created. Defaults to `true`.","description_kind":"markdown","optional":true},"stdin_open":{"type":"bool","description":"If `true`, keep STDIN open even if not attached (`docker run -i`). Defaults to `false`.","description_kind":"markdown","optional":true},"sysctls":{"type":["map","string"],"description":"A map of kernel parameters (sysctls) to set in the container.","description_kind":"markdown","optional":true},"tmpfs":{"type":["map","string"],"description":"A map of container directories which should be replaced by `tmpfs mounts`, and their corresponding mount options.","description_kind":"markdown","optional":true},"tty":{"type":"bool","description":"If `true`, allocate a pseudo-tty (`docker run -t`). Defaults to `false`.","description_kind":"markdown","optional":true},"user":{"type":"string","description":"User used for run the first process. Format is `user` or `user:group` which user and group can be passed literraly or by name.","description_kind":"markdown","optional":true},"userns_mode":{"type":"string","description":"Sets the usernamespace mode for the container when usernamespace remapping option is enabled.","description_kind":"markdown","optional":true},"working_dir":{"type":"string","description":"The working directory for commands to run in.","description_kind":"markdown","optional":true}},"block_types":{"capabilities":{"nesting_mode":"set","block":{"attributes":{"add":{"type":["set","string"],"description":"List of linux capabilities to add.","description_kind":"markdown","optional":true},"drop":{"type":["set","string"],"description":"List of linux capabilities to drop.","description_kind":"markdown","optional":true}},"description":"Add or drop certrain linux capabilities.","description_kind":"markdown"},"max_items":1},"client":{"nesting_mode":"list","block":{"attributes":{"host":{"type":"string","description":"The Docker daemon address","description_kind":"markdown","optional":true},"private_key":{"type":"string","description":"Path to the SSH private key","description_kind":"markdown","required":true},"registry_address":{"type":"string","description":"Address of the registry","description_kind":"markdown","required":true},"registry_password":{"type":"string","description":"Password for the registry","description_kind":"markdown","optional":true,"sensitive":true},"registry_username":{"type":"string","description":"Username for the registry","description_kind":"markdown","optional":true}},"description":"Configuration for Docker API client","description_kind":"markdown"},"min_items":1,"max_items":1},"devices":{"nesting_mode":"set","block":{"attributes":{"container_path":{"type":"string","description":"The path in the container where the device will be bound.","description_kind":"markdown","optional":true},"host_path":{"type":"string","description":"The path on the host where the device is located.","description_kind":"markdown","required":true},"permissions":{"type":"string","description":"The cgroup permissions given to the container to access the device. Defaults to `rwm`.","description_kind":"markdown","optional":true}},"description":"Bind devices to the container.","description_kind":"markdown"}},"healthcheck":{"nesting_mode":"list","block":{"attributes":{"interval":{"type":"string","description":"Time between running the check (ms|s|m|h). Defaults to `0s`.","description_kind":"markdown","optional":true},"retries":{"type":"number","description":"Consecutive failures needed to report unhealthy. Defaults to `0`.","description_kind":"markdown","optional":true},"start_period":{"type":"string","description":"Start period for the container to initialize before counting retries towards unstable (ms|s|m|h). Defaults to `0s`.","description_kind":"markdown","optional":true},"test":{"type":["list","string"],"description":"Command to run to check health. For example, to run `curl -f localhost/health` set the command to be `[\"CMD\", \"curl\", \"-f\", \"localhost/health\"]`.","description_kind":"markdown","required":true},"timeout":{"type":"string","description":"Maximum time to allow one check to run (ms|s|m|h). Defaults to `0s`.","description_kind":"markdown","optional":true}},"description":"A test to perform to check that the container is healthy","description_kind":"markdown"},"max_items":1},"host":{"nesting_mode":"set","block":{"attributes":{"host":{"type":"string","description":"Hostname to add","description_kind":"markdown","required":true},"ip":{"type":"string","description":"IP address this hostname should resolve to.","description_kind":"markdown","required":true}},"description":"Additional hosts to add to the container.","description_kind":"markdown"}},"labels":{"nesting_mode":"set","block":{"attributes":{"label":{"type":"string","description":"Name of the label","description_kind":"markdown","required":true},"value":{"type":"string","description":"Value of the label","description_kind":"markdown","required":true}},"description":"User-defined key/value metadata","description_kind":"markdown"}},"mounts":{"nesting_mode":"set","block":{"attributes":{"read_only":{"type":"bool","description":"Whether the mount should be read-only.","description_kind":"markdown","optional":true},"source":{"type":"string","description":"Mount source (e.g. a volume name, a host path).","description_kind":"markdown","optional":true},"target":{"type":"string","description":"Container path","description_kind":"markdown","required":true},"type":{"type":"string","description":"The mount type","description_kind":"markdown","required":true}},"block_types":{"bind_options":{"nesting_mode":"list","block":{"attributes":{"propagation":{"type":"string","description":"A propagation mode with the value.","description_kind":"markdown","optional":true}},"description":"Optional configuration for the bind type.","description_kind":"markdown"},"max_items":1},"tmpfs_options":{"nesting_mode":"list","block":{"attributes":{"mode":{"type":"number","description":"The permission mode for the tmpfs mount in an integer.","description_kind":"markdown","optional":true},"size_bytes":{"type":"number","description":"The size for the tmpfs mount in bytes.","description_kind":"markdown","optional":true}},"description":"Optional configuration for the tmpfs type.","description_kind":"markdown"},"max_items":1},"volume_options":{"nesting_mode":"list","block":{"attributes":{"driver_name":{"type":"string","description":"Name of the driver to use to create the volume.","description_kind":"markdown","optional":true},"driver_options":{"type":["map","string"],"description":"key/value map of driver specific options.","description_kind":"markdown","optional":true},"no_copy":{"type":"bool","description":"Populate volume with data from the target.","description_kind":"markdown","optional":true}},"block_types":{"labels":{"nesting_mode":"set","block":{"attributes":{"label":{"type":"string","description":"Name of the label","description_kind":"markdown","required":true},"value":{"type":"string","description":"Value of the label","description_kind":"markdown","required":true}},"description":"User-defined key/value metadata.","description_kind":"markdown"}}},"description":"Optional configuration for the volume type.","description_kind":"markdown"},"max_items":1}},"description":"Specification for mounts to be added to containers created as part of the service.","description_kind":"markdown"}},"networks_advanced":{"nesting_mode":"set","block":{"attributes":{"aliases":{"type":["set","string"],"description":"The network aliases of the container in the specific network.","description_kind":"markdown","optional":true},"ipv4_address":{"type":"string","description":"The IPV4 address of the container in the specific network.","description_kind":"markdown","optional":true},"ipv6_address":{"type":"string","description":"The IPV6 address of the container in the specific network.","description_kind":"markdown","optional":true},"name":{"type":"string","description":"The name of the network.","description_kind":"markdown","required":true}},"description":"The networks the container is attached to","description_kind":"markdown"}},"ports":{"nesting_mode":"list","block":{"attributes":{"external":{"type":"number","description":"Port exposed out of the container. If not given a free random port `\u003e= 32768` will be used.","description_kind":"markdown","optional":true,"computed":true},"internal":{"type":"number","description":"Port within the container.","description_kind":"markdown","required":true},"ip":{"type":"string","description":"IP address/mask that can access this port. Defaults to `0.0.0.0`.","description_kind":"markdown","optional":true},"protocol":{"type":"string","description":"Protocol that can be used over this port. Defaults to `tcp`.","description_kind":"markdown","optional":true}},"description":"Publish a container's port(s) to the host.","description_kind":"markdown"}},"ulimit":{"nesting_mode":"set","block":{"attributes":{"hard":{"type":"number","description":"The hard limit","description_kind":"markdown","required":true},"name":{"type":"string","description":"The name of the ulimit","description_kind":"markdown","required":true},"soft":{"type":"number","description":"The soft limit","description_kind":"markdown","required":true}},"description":"Ulimit options to add.","description_kind":"markdown"}},"upload":{"nesting_mode":"set","block":{"attributes":{"content":{"type":"string","description":"Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text. Conflicts with `content_base64` \u0026 `source`","description_kind":"markdown","optional":true},"content_base64":{"type":"string","description":"Base64-encoded data that will be decoded and uploaded as raw bytes for the object content. This allows safely uploading non-UTF8 binary data, but is recommended only for larger binary content such as the result of the `base64encode` interpolation function. See [here](https://github.com/terraform-providers/terraform-provider-docker/issues/48#issuecomment-374174588) for the reason. Conflicts with `content` \u0026 `source`","description_kind":"markdown","optional":true},"executable":{"type":"bool","description":"If `true`, the file will be uploaded with user executable permission. Defaults to `false`.","description_kind":"markdown","optional":true},"file":{"type":"string","description":"Path to the file in the container where is upload goes to","description_kind":"markdown","required":true},"source":{"type":"string","description":"A filename that references a file which will be uploaded as the object content. This allows for large file uploads that do not get stored in state. Conflicts with `content` \u0026 `content_base64`","description_kind":"markdown","optional":true},"source_hash":{"type":"string","description":"If using `source`, this will force an update if the file content has updated but the filename has not. ","description_kind":"markdown","optional":true}},"description":"Specifies files to upload to the container before starting it. Only one of `content` or `content_base64` can be set and at least one of them has to be set.","description_kind":"markdown"}},"volumes":{"nesting_mode":"set","block":{"attributes":{"container_path":{"type":"string","description":"The path in the container where the volume will be mounted.","description_kind":"markdown","optional":true},"from_container":{"type":"string","description":"The container where the volume is coming from.","description_kind":"markdown","optional":true},"host_path":{"type":"string","description":"The path on the host where the volume is coming from.","description_kind":"markdown","optional":true},"read_only":{"type":"bool","description":"If `true`, this volume will be readonly. Defaults to `false`.","description_kind":"markdown","optional":true},"volume_name":{"type":"string","description":"The name of the docker volume which should be mounted.","description_kind":"markdown","optional":true}},"description":"Spec for mounting volumes in the container.","description_kind":"markdown"}}},"description":"Manages the lifecycle of a Docker container.","description_kind":"markdown"}},"docker_image":{"version":0,"block":{"attributes":{"force_remove":{"type":"bool","description":"If true, then the image is removed forcibly when the resource is destroyed.","description_kind":"markdown","optional":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"keep_locally":{"type":"bool","description":"If true, then the Docker image won't be deleted on destroy operation. If this is false, it will delete the image from the docker local storage on destroy operation.","description_kind":"markdown","optional":true},"latest":{"type":"string","description":"The ID of the image.","description_kind":"markdown","computed":true},"name":{"type":"string","description":"The name of the Docker image, including any tags or SHA256 repo digests.","description_kind":"markdown","required":true},"output":{"type":"string","description_kind":"plain","deprecated":true,"computed":true},"pull_trigger":{"type":"string","description":"A value which cause an image pull when changed","description_kind":"markdown","deprecated":true,"optional":true},"pull_triggers":{"type":["set","string"],"description":"List of values which cause an image pull when changed. This is used to store the image digest from the registry when using the [docker_registry_image](../data-sources/registry_image.md).","description_kind":"markdown","optional":true}},"block_types":{"build":{"nesting_mode":"set","block":{"attributes":{"build_arg":{"type":["map","string"],"description":"Set build-time variables","description_kind":"markdown","optional":true},"dockerfile":{"type":"string","description":"Name of the Dockerfile. Defaults to `Dockerfile`.","description_kind":"markdown","optional":true},"force_remove":{"type":"bool","description":"Always remove intermediate containers","description_kind":"markdown","optional":true},"label":{"type":["map","string"],"description":"Set metadata for an image","description_kind":"markdown","optional":true},"no_cache":{"type":"bool","description":"Do not use cache when building the image","description_kind":"markdown","optional":true},"path":{"type":"string","description":"Context path","description_kind":"markdown","required":true},"remove":{"type":"bool","description":"Remove intermediate containers after a successful build. Defaults to  `true`.","description_kind":"markdown","optional":true},"tag":{"type":["list","string"],"description":"Name and optionally a tag in the 'name:tag' format","description_kind":"markdown","optional":true},"target":{"type":"string","description":"Set the target build stage to build","description_kind":"markdown","optional":true}},"description":"Configuration to build an image. Please see [docker build command reference](https://docs.docker.com/engine/reference/commandline/build/#options) too.","description_kind":"markdown"},"max_items":1},"client":{"nesting_mode":"list","block":{"attributes":{"host":{"type":"string","description":"The Docker daemon address","description_kind":"markdown","optional":true},"private_key":{"type":"string","description":"Path to the SSH private key","description_kind":"markdown","required":true},"registry_address":{"type":"string","description":"Address of the registry","description_kind":"markdown","required":true},"registry_password":{"type":"string","description":"Password for the registry","description_kind":"markdown","optional":true,"sensitive":true},"registry_username":{"type":"string","description":"Username for the registry","description_kind":"markdown","optional":true}},"description":"Configuration for Docker API client","description_kind":"markdown"},"min_items":1,"max_items":1}},"description":"Pulls a Docker image to a given Docker host from a Docker Registry.\n This resource will *not* pull new layers of the image automatically unless used in conjunction with [docker_registry_image](registry_image.md) data source to update the `pull_triggers` field.","description_kind":"markdown"}}}}}}
