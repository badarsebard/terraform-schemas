{"format_version":"0.2","provider_schemas":{"registry.terraform.io/k-yomo/algolia":{"provider":{"version":0,"block":{"attributes":{"api_key":{"type":"string","description":"The API key to access algolia resources. Defaults to the env variable `ALGOLIA_API_KEY`.","description_kind":"markdown","optional":true},"app_id":{"type":"string","description":"The ID of the application. Defaults to the env variable `ALGOLIA_APP_ID`.","description_kind":"markdown","optional":true}},"description_kind":"plain"}},"resource_schemas":{"algolia_api_key":{"version":0,"block":{"attributes":{"acl":{"type":["set","string"],"description":"Set of permissions associated with the key.\nThe possible ACLs are:\n  - `search`: allowed to perform search operations.\n  - `browse`: allowed to retrieve all index data with the browse endpoint.\n  - `addObject`: allowed to add or update a records in the index.\n  - `deleteObject`: allowed to delete an existing record.\n  - `listIndexes`: allowed to get a list of all existing indices.\n  - `deleteIndex`: allowed to delete an index.\n  - `settings`: allowed to read all index settings.\n  - `editSettings`: allowed to update all index settings.\n  - `analytics`: allowed to retrieve data with the Analytics API.\n  - `recommendation`: allowed to interact with the Recommendation API.\n  - `usage` allowed to retrieve data with the Usage API.\n  - `nluReadAnswers`: allowed to perform semantic search with the Answers API.\n  - `logs`: allowed to query the logs.\n  - `seeUnretrievableAttributes`: allowed to retrieve unretrievableAttributes for all operations that return records.\n","description_kind":"markdown","required":true},"created_at":{"type":"number","description":"The unix time at which the key has been created.","description_kind":"markdown","computed":true},"description":{"type":"string","description":"Description of the API key.","description_kind":"markdown","optional":true},"expires_at":{"type":"string","description":"Unix timestamp of the date at which the key expires. RFC3339 format. Will not expire per default.","description_kind":"markdown","optional":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"indexes":{"type":["set","string"],"description":"List of targeted indices. You can target all indices starting with a prefix or ending with a suffix using the ‘*’ character. For example, “dev_*” matches all indices starting with “dev_” and “*_dev” matches all indices ending with “_dev”.","description_kind":"markdown","optional":true},"key":{"type":"string","description":"The created key.","description_kind":"markdown","computed":true,"sensitive":true},"max_hits_per_query":{"type":"number","description":"Maximum number of hits this API key can retrieve in one call. This parameter can be used to protect you from attempts at retrieving your entire index contents by massively querying the index.","description_kind":"markdown","optional":true},"max_queries_per_ip_per_hour":{"type":"number","description":"Maximum number of API calls allowed from an IP address per hour.Each time an API call is performed with this key, a check is performed. If the IP at the source of the call did more than this number of calls in the last hour, a 429 code is returned.\n\nThis parameter can be used to protect you from attempts at retrieving your entire index contents by massively querying the index.","description_kind":"markdown","optional":true},"referers":{"type":["set","string"],"description":"List of referrers that can perform an operation. You can use the “*” (asterisk) character as a wildcard to match subdomains, or all pages of a website. For example, `\"https://algolia.com/\\*\"` matches all referrers starting with `\"https://algolia.com/\"`, and `\"\\*.algolia.com\"` matches all referrers ending with `\".algolia.com\"`. If you want to allow all possible referrers from the `algolia.com` domain, you can use `\"\\*algolia.com/\\*\"`.","description_kind":"markdown","optional":true}},"description":"A configuration for an API key","description_kind":"markdown"}},"algolia_index":{"version":0,"block":{"attributes":{"enable_personalization":{"type":"bool","description":"Whether to enable the Personalization feature.","description_kind":"markdown","optional":true},"enable_rules":{"type":"bool","description":"Whether Rules should be globally enabled.","description_kind":"markdown","optional":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"name":{"type":"string","description":"Name of the index.","description_kind":"markdown","required":true}},"block_types":{"advanced_config":{"nesting_mode":"list","block":{"attributes":{"attribute_criteria_computed_by_min_proximity":{"type":"bool","description":"When attribute is ranked above proximity in your ranking formula, proximity is used to select which searchable attribute is matched in the **attribute ranking stage**.","description_kind":"markdown","optional":true},"attribute_for_distinct":{"type":"string","description":"Name of the de-duplication attribute to be used with the `distinct` feature.","description_kind":"markdown","optional":true},"distinct":{"type":"number","description":"Whether to enable de-duplication or grouping of results.\n- When set to `0`, you disable de-duplication and grouping.\n- When set to `1`, you enable **de-duplication**, in which only the most relevant result is returned for all records that have the same value in the distinct attribute. This is similar to the SQL `distinct` keyword.\nif `distinct` is set to 1 (de-duplication):\n- When set to `N (where N \u003e 1)`, you enable grouping, in which most N hits will be returned with the same value for the distinct attribute.\nthen the N most relevant episodes for every show are kept, with similar consequences.\n","description_kind":"markdown","optional":true},"max_facet_hits":{"type":"number","description":"Maximum number of facet hits to return during a search for facet values.","description_kind":"markdown","optional":true},"min_proximity":{"type":"number","description":"Precision of the `proximity` ranking criterion.","description_kind":"markdown","optional":true},"replace_synonyms_in_highlight":{"type":"bool","description":"Whether to highlight and snippet the original word that matches the synonym or the synonym itself.","description_kind":"markdown","optional":true},"response_fields":{"type":["set","string"],"description":"The fields the response will contain. Applies to search and browse queries.\nThis parameter is mainly intended to **limit the response size.** For example, in complex queries, echoing of request parameters in the response’s params field can be undesirable.","description_kind":"markdown","optional":true}},"description":"The configuration for advanced features in index setting.","description_kind":"markdown"},"max_items":1},"attributes_config":{"nesting_mode":"list","block":{"attributes":{"attributes_for_faceting":{"type":["set","string"],"description":"The complete list of attributes that will be used for faceting.","description_kind":"markdown","optional":true},"attributes_to_retrieve":{"type":["set","string"],"description":"List of attributes to be retrieved at query time.","description_kind":"markdown","optional":true},"searchable_attributes":{"type":["list","string"],"description":"The complete list of attributes used for searching.","description_kind":"markdown","optional":true},"unretrievable_attributes":{"type":["set","string"],"description":"List of attributes that cannot be retrieved at query time.","description_kind":"markdown","optional":true}},"description":"The configuration for attributes.","description_kind":"markdown"},"max_items":1},"faceting_config":{"nesting_mode":"list","block":{"attributes":{"max_values_per_facet":{"type":"number","description":"Maximum number of facet values to return for each facet during a regular search.","description_kind":"markdown","optional":true},"sort_facet_values_by":{"type":"string","description":"Parameter to controls how the facet values are sorted within each faceted attribute.","description_kind":"markdown","optional":true}},"description":"The configuration for faceting.","description_kind":"markdown"},"max_items":1},"highlight_and_snippet_config":{"nesting_mode":"list","block":{"attributes":{"attributes_to_highlight":{"type":["set","string"],"description":"List of attributes to highlight.","description_kind":"markdown","optional":true,"computed":true},"attributes_to_snippet":{"type":["set","string"],"description":"List of attributes to snippet, with an optional maximum number of words to snippet.","description_kind":"markdown","optional":true,"computed":true},"highlight_post_tag":{"type":"string","description":"The HTML string to insert after the highlighted parts in all highlight and snippet results.","description_kind":"markdown","optional":true},"highlight_pre_tag":{"type":"string","description":"The HTML string to insert before the highlighted parts in all highlight and snippet results.","description_kind":"markdown","optional":true},"restrict_highlight_and_snippet_arrays":{"type":"bool","description":"Restrict highlighting and snippeting to items that matched the query.","description_kind":"markdown","optional":true},"snippet_ellipsis_text":{"type":"string","description":"String used as an ellipsis indicator when a snippet is truncated.","description_kind":"markdown","optional":true}},"description":"The configuration for highlight / snippet in index setting.","description_kind":"markdown"},"max_items":1},"languages_config":{"nesting_mode":"list","block":{"attributes":{"attributes_to_transliterate":{"type":["set","string"],"description":"List of attributes to apply transliteration","description_kind":"markdown","optional":true,"computed":true},"camel_case_attributes":{"type":["set","string"],"description":"List of attributes on which to do a decomposition of camel case words.","description_kind":"markdown","optional":true},"custom_normalization":{"type":["map","string"],"description":"Custom normalization which overrides the engine’s default normalization","description_kind":"markdown","optional":true},"decompound_query":{"type":"bool","description":"Whether to split compound words into their composing atoms in the query.","description_kind":"markdown","optional":true},"ignore_plurals":{"type":"bool","description":"Whether to treat singular, plurals, and other forms of declensions as matching terms.","description_kind":"markdown","optional":true},"ignore_plurals_for":{"type":["set","string"],"description":"Whether to treat singular, plurals, and other forms of declensions as matching terms in target languages.\nList of supported languages are listed on http://nhttps//www.algolia.com/doc/api-reference/api-parameters/ignorePlurals/#usage-notes","description_kind":"markdown","optional":true},"index_languages":{"type":["set","string"],"description":"List of languages at the index level for language-specific processing such as tokenization and normalization.","description_kind":"markdown","optional":true},"keep_diacritics_on_characters":{"type":"string","description":"List of characters that the engine shouldn’t automatically normalize.","description_kind":"markdown","optional":true},"query_languages":{"type":["set","string"],"description":"List of languages to be used by language-specific settings and functionalities such as ignorePlurals, removeStopWords, and CJK word-detection.","description_kind":"markdown","optional":true},"remove_stop_words":{"type":"bool","description":"Whether to removes stop (common) words from the query before executing it.","description_kind":"markdown","optional":true},"remove_stop_words_for":{"type":["set","string"],"description":"List of languages to removes stop (common) words from the query before executing it.","description_kind":"markdown","optional":true}},"block_types":{"decompounded_attributes":{"nesting_mode":"list","block":{"attributes":{"attributes":{"type":["set","string"],"description_kind":"plain","required":true},"language":{"type":"string","description_kind":"plain","required":true}},"description":"List of attributes to apply word segmentation, also known as decompounding.","description_kind":"markdown"}}},"description":"The configuration for languages in index setting.","description_kind":"markdown"},"max_items":1},"pagination_config":{"nesting_mode":"list","block":{"attributes":{"hits_per_page":{"type":"number","description":"The number of hits per page.","description_kind":"markdown","optional":true},"pagination_limited_to":{"type":"number","description":"The maximum number of hits accessible via pagination","description_kind":"markdown","optional":true}},"description":"The configuration for pagination in index setting.","description_kind":"markdown"},"max_items":1},"performance_config":{"nesting_mode":"list","block":{"attributes":{"allow_compression_of_integer_array":{"type":"bool","description":"Whether to enable compression of large integer arrays.","description_kind":"markdown","optional":true},"numeric_attributes_for_filtering":{"type":["set","string"],"description":"List of numeric attributes that can be used as numerical filters.","description_kind":"markdown","optional":true}},"description":"The configuration for performance in index setting.","description_kind":"markdown"},"max_items":1},"query_strategy_config":{"nesting_mode":"list","block":{"attributes":{"advanced_syntax":{"type":"bool","description":"Whether to enable the advanced query syntax.","description_kind":"markdown","optional":true},"advanced_syntax_features":{"type":["set","string"],"description":"Advanced syntax features to be activated when ‘advancedSyntax’ is enabled","description_kind":"markdown","optional":true},"alternatives_as_exact":{"type":["set","string"],"description":"List of alternatives that should be considered an exact match by the exact ranking criterion.","description_kind":"markdown","optional":true},"disable_exact_on_attributes":{"type":["set","string"],"description":"List of attributes on which you want to disable the exact ranking criterion.","description_kind":"markdown","optional":true},"disable_prefix_on_attributes":{"type":["set","string"],"description":"List of attributes on which you want to disable prefix matching.","description_kind":"markdown","optional":true},"exact_on_single_word_query":{"type":"string","description":"Controls how the exact ranking criterion is computed when the query contains only one word.","description_kind":"markdown","optional":true},"optional_words":{"type":["set","string"],"description":"A list of words that should be considered as optional when found in the query.","description_kind":"markdown","optional":true},"query_type":{"type":"string","description":"Query type to control if and how query words are interpreted as prefixes.","description_kind":"markdown","optional":true},"remove_words_if_no_results":{"type":"string","description":"Strategy to remove words from the query when it doesn’t match any hits.","description_kind":"markdown","optional":true}},"description":"The configuration for query strategy in index setting.","description_kind":"markdown"},"max_items":1},"ranking_config":{"nesting_mode":"list","block":{"attributes":{"custom_ranking":{"type":["list","string"],"description":"List of attributes for custom ranking criterion.","description_kind":"markdown","optional":true},"ranking":{"type":["list","string"],"description":"List of ranking criteria.","description_kind":"markdown","optional":true},"replicas":{"type":["set","string"],"description":"List of replica names.","description_kind":"markdown","optional":true}},"description":"The configuration for ranking.","description_kind":"markdown"},"max_items":1},"timeouts":{"nesting_mode":"single","block":{"attributes":{"default":{"type":"string","description_kind":"plain","optional":true}},"description_kind":"plain"}},"typos_config":{"nesting_mode":"list","block":{"attributes":{"allow_typos_on_numeric_tokens":{"type":"bool","description":"Whether to allow typos on numbers (“numeric tokens”) in the query str","description_kind":"markdown","optional":true},"disable_typo_tolerance_on_attributes":{"type":["list","string"],"description":"List of attributes on which you want to disable typo tolerance.","description_kind":"markdown","optional":true},"disable_typo_tolerance_on_words":{"type":["list","string"],"description":"List of words on which typo tolerance will be disabled.","description_kind":"markdown","optional":true},"min_word_size_for_1_typo":{"type":"number","description":"Minimum number of characters a word in the query string must contain to accept matches with 1 typo.","description_kind":"markdown","optional":true},"min_word_size_for_2_typos":{"type":"number","description":"Minimum number of characters a word in the query string must contain to accept matches with 2 typos.","description_kind":"markdown","optional":true},"separators_to_index":{"type":"string","description":"Separators (punctuation characters) to index. By default, separators are not indexed.","description_kind":"markdown","optional":true},"typo_tolerance":{"type":"string","description":"Whether typo tolerance is enabled and how it is applied","description_kind":"markdown","optional":true}},"description":"The configuration for typos in index setting.","description_kind":"markdown"},"max_items":1}},"description":"A configuration for an index.","description_kind":"markdown"}},"algolia_query_suggestions":{"version":0,"block":{"attributes":{"exclude":{"type":["set","string"],"description":"A list of words and patterns to exclude from the Query Suggestions index.","description_kind":"markdown","optional":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"index_name":{"type":"string","description":"Index name to target.","description_kind":"markdown","required":true},"languages":{"type":["set","string"],"description":"A list of languages used to de-duplicate singular and plural suggestions.","description_kind":"markdown","optional":true}},"block_types":{"source_indices":{"nesting_mode":"list","block":{"attributes":{"analytics_tags":{"type":["set","string"],"description":"A list of analytics tags to filter the popular searches per tag.","description_kind":"markdown","optional":true},"external":{"type":["set","string"],"description":"A list of external indices to use to generate custom Query Suggestions.","description_kind":"markdown","optional":true},"generate":{"type":["list",["list","string"]],"description":"List of facet attributes used to generate Query Suggestions. The resulting suggestions are every combination of the facets in the nested list \n(e.g., (facetA and facetB) and facetC).\n```\n[\n  [\"facetA\", \"facetB\"],\n  [\"facetC\"]\n]\n```","description_kind":"markdown","optional":true},"index_name":{"type":"string","description":"Index name to target.","description_kind":"markdown","required":true},"min_hits":{"type":"number","description":"Minimum number of hits (e.g., matching records in the source index) to generate a suggestions.","description_kind":"markdown","optional":true,"computed":true},"min_letters":{"type":"number","description":"Minimum number of required letters for a suggestion to remain.","description_kind":"markdown","optional":true,"computed":true}},"block_types":{"facets":{"nesting_mode":"list","block":{"attributes":{"amount":{"type":"number","description":"How many of the top categories to show","description_kind":"markdown","required":true},"attribute":{"type":"string","description":"Category attribute in your index","description_kind":"markdown","required":true}},"description":"A list of facets to define as categories for the query suggestions.","description_kind":"markdown"}}},"description":"A list of source indices used to generate a Query Suggestions index.","description_kind":"markdown"},"min_items":1}},"description":"A configuration that lies behind your Query Suggestions index.","description_kind":"markdown"}},"algolia_rule":{"version":0,"block":{"attributes":{"description":{"type":"string","description":"This field is intended for Rule management purposes, in particular to ease searching for Rules and presenting them to human readers. It is not interpreted by the API.","description_kind":"markdown","optional":true},"enabled":{"type":"bool","description":"Whether the Rule is enabled. Disabled Rules remain in the index, but are not applied at query time.","description_kind":"markdown","optional":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"index_name":{"type":"string","description":"Name of the index to apply rule.","description_kind":"markdown","required":true},"object_id":{"type":"string","description":"Unique identifier for the Rule (format: `[A-Za-z0-9_-]+`).","description_kind":"markdown","required":true}},"block_types":{"conditions":{"nesting_mode":"list","block":{"attributes":{"alternatives":{"type":"bool","description":"Whether the `pattern` matches on plurals, synonyms, and typos.\n\nThis parameter goes hand in hand with the `pattern`  parameter. If the `pattern` is “shoe” and `alternatives` is `true`, the `pattern` matches on “shoes”, as well as synonyms and typos of “shoe”.","description_kind":"markdown","optional":true},"anchoring":{"type":"string","description":"Whether the pattern parameter must match the beginning or the end of the query string, or both, or none.\nPossible values are `is`, `startsWith`, `endsWith` and `contains`.\nThis parameter goes hand in hand with the `pattern` parameter. If you’re creating a Rule that depends on a specific query, you must specify the `pattern` and `anchoring`.\n\nOtherwise, you can omit both.\n","description_kind":"markdown","optional":true},"context":{"type":"string","description":"Rule context (format: `[A-Za-z0-9_-]+`). When specified, the Rule is only applied when the same context is specified at query time (using the `ruleContexts` parameter). When absent, the Rule is generic and always applies (provided that its other conditions are met, of course).","description_kind":"markdown","optional":true},"pattern":{"type":"string","description":"Query pattern syntax.\nQuery patterns are expressed as a string with a specific syntax. A pattern is a sequence of tokens, which can be either:\n\n- Facet value placeholder: `{facet:$facet_name}`. Example: `{facet:brand}`.\n- Literal: the world itself. Example: Algolia.\nSpecial characters (`*`, `{`, `}`, `:` and `\\`) must be escaped by preceding them with a backslash (\\) if they are to be treated as literals.\n\nThis parameter goes hand in hand with the `anchoring` parameter. If you’re creating a Rule that depends on a specific query, you must specify the pattern and anchoring. The empty `\"\"` pattern is only allowed when `anchoring` is set to `is`.\n\nOtherwise, you can omit both.\n","description_kind":"markdown","optional":true}},"description":"A list of conditions that should apply to activate a Rule. You can use up to 25 conditions per Rule.","description_kind":"markdown"}},"consequence":{"nesting_mode":"list","block":{"attributes":{"hide":{"type":["set","string"],"description":"List of object IDs to hide from hits.","description_kind":"markdown","optional":true},"user_data":{"type":"string","description":"Custom JSON formatted string that will be appended to the userData array in the response. This object is not interpreted by the API. It is limited to 1kB of minified JSON.","description_kind":"markdown","optional":true}},"block_types":{"params":{"nesting_mode":"list","block":{"attributes":{"query":{"type":"string","description":"It replaces the entire query string. Either one of `query` or `object_query` can be set.","description_kind":"markdown","optional":true}},"block_types":{"automatic_facet_filters":{"nesting_mode":"list","block":{"attributes":{"disjunctive":{"type":"bool","description":"Whether the filter is disjunctive (true) or conjunctive (false). If the filter applies multiple times, e.g. because the query string contains multiple values of the same facet, the multiple occurrences are combined with an `AND` operator by default (conjunctive mode). If the filter is specified as disjunctive, however, multiple occurrences are combined with an `OR` operator instead.","description_kind":"markdown","optional":true},"facet":{"type":"string","description":"Attribute to filter on. This must match a facet placeholder in the Rule’s pattern.","description_kind":"markdown","required":true},"score":{"type":"number","description":"Score for the filter. Typically used for optional or disjunctive filters.","description_kind":"markdown","optional":true}},"description":"Names of facets to which automatic filtering must be applied; they must match the facet name of a facet value placeholder in the query pattern.","description_kind":"markdown"}},"automatic_optional_facet_filters":{"nesting_mode":"list","block":{"attributes":{"disjunctive":{"type":"bool","description":"Whether the filter is disjunctive (true) or conjunctive (false). If the filter applies multiple times, e.g. because the query string contains multiple values of the same facet, the multiple occurrences are combined with an `AND` operator by default (conjunctive mode). If the filter is specified as disjunctive, however, multiple occurrences are combined with an `OR` operator instead.","description_kind":"markdown","optional":true},"facet":{"type":"string","description":"Attribute to filter on. This must match a facet placeholder in the Rule’s pattern.","description_kind":"markdown","required":true},"score":{"type":"number","description":"Score for the filter. Typically used for optional or disjunctive filters.","description_kind":"markdown","optional":true}},"description":"Same syntax as `automatic_facet_filters`, but the engine treats the filters as optional. Behaves like [optionalFilters](https://www.algolia.com/doc/api-reference/api-parameters/optionalFilters/).","description_kind":"markdown"}},"object_query":{"nesting_mode":"list","block":{"attributes":{"delete":{"type":"string","description":"Text or patterns to remove from the query string.","description_kind":"markdown","required":true},"insert":{"type":"string","description":"Text that should be inserted in place of the removed text inside the query string.","description_kind":"markdown","optional":true},"type":{"type":"string","description":"Type of edit. Must be one of:\n\t- `remove`: when you want to delete some text and not replace it with anything\n\t- `replace`: when you want to delete some text and replace it with something else\n","description_kind":"markdown","required":true}},"description":"It describes incremental edits to be made to the query string. Either one of `query` or `object_query` can be set.","description_kind":"markdown"}}},"description":"Additional search parameters. Any valid search parameter is allowed. Specific treatment is applied to these fields: `query`, `automaticFacetFilters`, `automaticOptionalFacetFilters`.","description_kind":"markdown"},"max_items":1},"promote":{"nesting_mode":"list","block":{"attributes":{"object_ids":{"type":["set","string"],"description_kind":"plain","required":true},"position":{"type":"number","description":"The position to promote the object(s) to (zero-based). If you pass `object_ids`, we place the objects at this position as a group. For example, if you pass four `object_ids` to position `0`, the objects take the first four positions.","description_kind":"markdown","required":true}},"description":"Objects to promote as hits.","description_kind":"markdown"}}},"description":"Consequence of the Rule. \nAt least one of the following object must be used:\n- params\n- promote\n- hide\n- user_data\n","description_kind":"markdown"},"min_items":1,"max_items":1},"validity":{"nesting_mode":"list","block":{"attributes":{"from":{"type":"string","description":"Lower bound of the time range. RFC3339 format.","description_kind":"markdown","required":true},"until":{"type":"string","description":"Upper bound of the time range. RFC3339 format.","description_kind":"markdown","required":true}},"description":"Objects to promote as hits.","description_kind":"markdown"}}},"description":"A configuration for a Rule.  To get more information about rules, see the [Official Documentation](https://www.algolia.com/doc/guides/managing-results/rules/rules-overview/).","description_kind":"markdown"}},"algolia_synonyms":{"version":0,"block":{"attributes":{"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"index_name":{"type":"string","description":"Name of the index to apply synonyms.","description_kind":"markdown","required":true}},"block_types":{"synonyms":{"nesting_mode":"set","block":{"attributes":{"corrections":{"type":["set","string"],"description":"List of corrections of the `word`. Required if type=`altCorrection1` or type=`altCorrection2`","description_kind":"markdown","optional":true},"input":{"type":"string","description":"Defines the synonym. A word or expression, used as the basis for the array of synonyms. Required if type=`oneWaySynonym`.","description_kind":"markdown","optional":true},"object_id":{"type":"string","description":"Unique identifier for the synonym.It can contain any character, and be of unlimited length.","description_kind":"markdown","required":true},"placeholder":{"type":"string","description":"Single word, used as the basis for the below array of replacements.  Required if type=`placeholder`","description_kind":"markdown","optional":true},"replacements":{"type":["set","string"],"description":"List of replacements of the placeholder. Required if type=`placeholder`","description_kind":"markdown","optional":true},"synonyms":{"type":["set","string"],"description":"List of synonyms (up to `20 for type `synonym` and 100 for type `oneWaySynonym`). Required if type=`synonym` or type=`oneWaySynonym`.","description_kind":"markdown","optional":true},"type":{"type":"string","description":"The type of the synonym. Possible values are `synonym`, `oneWaySynonym`, `altCorrection1`, `altCorrection2` and `placeholder`.","description_kind":"markdown","required":true},"word":{"type":"string","description":"Single word, used as the basis for the below array of corrections. Required if type=`altCorrection1` or type=`altCorrection2`","description_kind":"markdown","optional":true}},"description":"A list of conditions that should apply to activate a Rule. You can use up to 25 conditions per Rule.","description_kind":"markdown"},"min_items":1}},"description":"A configuration for synonyms. To get more information about synonyms, see the [Official Documentation](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/adding-synonyms/).\n\n※ **It replaces any existing synonyms set for the index.** So you can't have multiple `algolia_synonyms` resources for the same index.\n","description_kind":"markdown"}}},"data_source_schemas":{"algolia_index":{"version":0,"block":{"attributes":{"advanced_config":{"type":["list",["object",{"attribute_criteria_computed_by_min_proximity":"bool","attribute_for_distinct":"string","distinct":"number","max_facet_hits":"number","min_proximity":"number","replace_synonyms_in_highlight":"bool","response_fields":["set","string"]}]],"description":"The configuration for advanced features in index setting.","description_kind":"markdown","computed":true},"attributes_config":{"type":["list",["object",{"attributes_for_faceting":["set","string"],"attributes_to_retrieve":["set","string"],"searchable_attributes":["list","string"],"unretrievable_attributes":["set","string"]}]],"description":"The configuration for attributes.","description_kind":"markdown","computed":true},"enable_personalization":{"type":"bool","description":"Whether to enable the Personalization feature.","description_kind":"markdown","computed":true},"enable_rules":{"type":"bool","description":"Whether Rules should be globally enabled.","description_kind":"markdown","computed":true},"faceting_config":{"type":["list",["object",{"max_values_per_facet":"number","sort_facet_values_by":"string"}]],"description":"The configuration for faceting.","description_kind":"markdown","computed":true},"highlight_and_snippet_config":{"type":["list",["object",{"attributes_to_highlight":["set","string"],"attributes_to_snippet":["set","string"],"highlight_post_tag":"string","highlight_pre_tag":"string","restrict_highlight_and_snippet_arrays":"bool","snippet_ellipsis_text":"string"}]],"description":"The configuration for highlight / snippet in index setting.","description_kind":"markdown","computed":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"languages_config":{"type":["list",["object",{"attributes_to_transliterate":["set","string"],"camel_case_attributes":["set","string"],"custom_normalization":["map","string"],"decompound_query":"bool","decompounded_attributes":["list",["object",{"attributes":["set","string"],"language":"string"}]],"ignore_plurals":"bool","ignore_plurals_for":["set","string"],"index_languages":["set","string"],"keep_diacritics_on_characters":"string","query_languages":["set","string"],"remove_stop_words":"bool","remove_stop_words_for":["set","string"]}]],"description":"The configuration for languages in index setting.","description_kind":"markdown","computed":true},"name":{"type":"string","description":"Name of the index.","description_kind":"markdown","required":true},"performance_config":{"type":["list",["object",{"allow_compression_of_integer_array":"bool","numeric_attributes_for_filtering":["set","string"]}]],"description":"The configuration for performance in index setting.","description_kind":"markdown","computed":true},"query_strategy_config":{"type":["list",["object",{"advanced_syntax":"bool","advanced_syntax_features":["set","string"],"alternatives_as_exact":["set","string"],"disable_exact_on_attributes":["set","string"],"disable_prefix_on_attributes":["set","string"],"exact_on_single_word_query":"string","optional_words":["set","string"],"query_type":"string","remove_words_if_no_results":"string"}]],"description":"The configuration for query strategy in index setting.","description_kind":"markdown","computed":true},"ranking_config":{"type":["list",["object",{"custom_ranking":["list","string"],"ranking":["list","string"],"replicas":["set","string"]}]],"description":"The configuration for ranking.","description_kind":"markdown","computed":true},"typos_config":{"type":["list",["object",{"allow_typos_on_numeric_tokens":"bool","disable_typo_tolerance_on_attributes":["list","string"],"disable_typo_tolerance_on_words":["list","string"],"min_word_size_for_1_typo":"number","min_word_size_for_2_typos":"number","separators_to_index":"string","typo_tolerance":"string"}]],"description":"The configuration for typos in index setting.","description_kind":"markdown","computed":true}},"block_types":{"pagination_config":{"nesting_mode":"list","block":{"attributes":{"hits_per_page":{"type":"number","description":"The number of hits per page.","description_kind":"markdown","computed":true},"pagination_limited_to":{"type":"number","description":"The maximum number of hits accessible via pagination","description_kind":"markdown","computed":true}},"description":"The configuration for pagination in index setting.","description_kind":"markdown"}}},"description":"Data source for an index.","description_kind":"markdown"}}}}}}
