{"format_version":"0.2","provider_schemas":{"registry.terraform.io/resinstack/linuxkit":{"provider":{"version":0,"block":{"description_kind":"plain"}},"resource_schemas":{"linuxkit_build":{"version":0,"block":{"attributes":{"config":{"type":"string","description":"The linuxkit config id","description_kind":"plain","optional":true},"config_yaml":{"type":"string","description":"The linuxkit config yaml","description_kind":"plain","optional":true},"destination":{"type":"string","description":"The destination of the generated OS image","description_kind":"plain","required":true},"files":{"type":["list","string"],"description":"The IDs of the file config","description_kind":"plain","optional":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"init":{"type":["list","string"],"description":"The IDs of init containers","description_kind":"plain","optional":true},"kernel":{"type":"string","description":"The ID of the kernel resource","description_kind":"plain","optional":true},"onboot":{"type":["list","string"],"description":"The IDs of the onboot containers","description_kind":"plain","optional":true},"onshutdown":{"type":["list","string"],"description":"The IDs of the onshutdown containers","description_kind":"plain","optional":true},"services":{"type":["list","string"],"description":"The IDs of the service containers","description_kind":"plain","optional":true},"trust":{"type":"string","description":"The ID of the trust config","description_kind":"plain","optional":true},"type":{"type":"string","description":"Type of build, can be tar or docker","description_kind":"plain","optional":true}},"description":"`linuxkit_build` assembles an image based on a `linuxkit_config`.  It will produce a tarball that contains the complete image in an intermediate format.","description_kind":"plain"}},"linuxkit_image_aws":{"version":0,"block":{"attributes":{"build":{"type":"string","description":"The build tarball","description_kind":"plain","required":true},"destination":{"type":"string","description":"The destination of the raw generated OS image","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"size":{"type":"number","description":"The size in megabytes of the new image","description_kind":"plain","required":true}},"description":"`linuxkit_image_aws` produces an image suitable for importing into AWS EC2.","description_kind":"plain"}},"linuxkit_image_dynamic_vhd":{"version":0,"block":{"attributes":{"build":{"type":"string","description":"The build tarball","description_kind":"plain","required":true},"destination":{"type":"string","description":"The destination of the raw generated OS image","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true}},"description":"`linuxkit_dynamic_vhd` produces a sparse VHD from a build tarball.","description_kind":"plain"}},"linuxkit_image_gcp":{"version":0,"block":{"attributes":{"build":{"type":"string","description":"The build tarball","description_kind":"plain","required":true},"destination":{"type":"string","description":"The destination of the raw generated OS image","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true}},"description":"`linuxkit_image_gcp` produces an image tarball suitable for uploading to GCP.","description_kind":"plain"}},"linuxkit_image_iso_bios":{"version":0,"block":{"attributes":{"build":{"type":"string","description":"The build tarball","description_kind":"plain","required":true},"destination":{"type":"string","description":"The destination of the raw generated OS image","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true}},"description":"`linuxkit_image_iso_bios` produces an ISO file suitable for booting on systems that support BIOS booting.","description_kind":"plain"}},"linuxkit_image_iso_efi":{"version":0,"block":{"attributes":{"build":{"type":"string","description":"The build tarball","description_kind":"plain","required":true},"destination":{"type":"string","description":"The destination of the raw generated OS image","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true}},"description":"`linuxkit_image_iso_efi` produces an ISO suitable for booting a machine with UEFI booting.","description_kind":"plain"}},"linuxkit_image_kernel_initrd":{"version":0,"block":{"attributes":{"build":{"type":"string","description":"The build tarball","description_kind":"plain","required":true},"destination":{"type":["map","string"],"description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true}},"description":"`linuxkit_image_kernel_initrd` produces a kernel and initrd suitable for PXE booting.  If you want an archive of the output, use `linuxkit_image_tar_kernel_initrd` instead.","description_kind":"plain"}},"linuxkit_image_kernel_squashfs":{"version":0,"block":{"attributes":{"build":{"type":"string","description":"The build tarball","description_kind":"plain","required":true},"destination":{"type":"string","description":"The destination of the raw generated OS image","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true}},"description":"`linuxkit_image_kernel_squashfs` process a build tarball and places the root filesystem on a squashfs.","description_kind":"plain"}},"linuxkit_image_qcow2_efi":{"version":0,"block":{"attributes":{"build":{"type":"string","description":"The build tarball","description_kind":"plain","required":true},"destination":{"type":"string","description":"The destination of the raw generated OS image","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true}},"description":"`linuxkit_image_qcow_efi` produces a qcow2 filesystem bootable on EFI systems.","description_kind":"plain"}},"linuxkit_image_raw_bios":{"version":0,"block":{"attributes":{"build":{"type":"string","description":"The build tarball","description_kind":"plain","required":true},"destination":{"type":"string","description":"The destination of the raw generated OS image","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true}},"description":"`linuxkit_image_raw_bios` produces an MBR image suitable for booting BIOS systems.","description_kind":"plain"}},"linuxkit_image_raw_efi":{"version":0,"block":{"attributes":{"build":{"type":"string","description":"The build tarball","description_kind":"plain","required":true},"destination":{"type":"string","description":"The destination of the raw generated OS image","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true}},"description":"`linuxkit_image_raw_efi` produces a GPT image file suitable for booting an UEFI enabled system.","description_kind":"plain"}},"linuxkit_image_rpi3":{"version":0,"block":{"attributes":{"build":{"type":"string","description":"The build tarball","description_kind":"plain","required":true},"destination":{"type":"string","description":"The destination of the raw generated OS image","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true}},"description":"`linuxkit_image_rpi3` produces a filesystem image suitable for booting a Raspberry Pi model 3, and by extension compatible boards.","description_kind":"plain"}},"linuxkit_image_tar_kernel_initrd":{"version":0,"block":{"attributes":{"build":{"type":"string","description":"The build tarball","description_kind":"plain","required":true},"destination":{"type":"string","description":"The destination of the raw generated OS image","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true}},"description":"`linuxkit_image_tar_kernel_initrd` produces a tarball containing a kernel and initrd suitable for PXE booting.","description_kind":"plain"}},"linuxkit_image_vhd":{"version":0,"block":{"attributes":{"build":{"type":"string","description":"The build tarball","description_kind":"plain","required":true},"destination":{"type":"string","description":"The destination of the raw generated OS image","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true}},"description":"`linuxkit_image_vhd` produces a VHD file with provisioned storage.","description_kind":"plain"}},"linuxkit_image_vmdk":{"version":0,"block":{"attributes":{"build":{"type":"string","description":"The build tarball","description_kind":"plain","required":true},"destination":{"type":"string","description":"The destination of the raw generated OS image","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true}},"description":"`linuxkit_image_vmdk` produces a VMDK file from the build tarball.","description_kind":"plain"}}},"data_source_schemas":{"linuxkit_config":{"version":0,"block":{"attributes":{"files":{"type":["list","string"],"description":"The IDs of the file config","description_kind":"plain","optional":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"init":{"type":["list","string"],"description":"The IDs of init containers","description_kind":"plain","required":true},"kernel":{"type":"string","description":"The ID of the kernel resource","description_kind":"plain","required":true},"onboot":{"type":["list","string"],"description":"The IDs of the onboot containers","description_kind":"plain","optional":true},"onshutdown":{"type":["list","string"],"description":"The IDs of the onshutdown containers","description_kind":"plain","optional":true},"services":{"type":["list","string"],"description":"The IDs of the service containers","description_kind":"plain","optional":true},"trust":{"type":"string","description":"The ID of the trust config","description_kind":"plain","optional":true},"yaml":{"type":"string","description":"The rendered yaml of the config","description_kind":"plain","computed":true}},"description":"`linuxkit_config` represents a complete configuration for a full machine.  It unifies the kernel, init, onboot, and service components into a single configuration to be built.","description_kind":"plain"}},"linuxkit_file":{"version":0,"block":{"attributes":{"contents":{"type":"string","description":"The contents of the file","description_kind":"plain","optional":true},"directory":{"type":"bool","description":"If true a directory is created","description_kind":"plain","optional":true},"gid":{"type":"number","description":"The gid of the file/directory owner","description_kind":"plain","optional":true},"gid_name":{"type":"string","description":"The gid name of the file/directory owner","description_kind":"plain","optional":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"metadata":{"type":"string","description":"Format to write image metadata, only yaml is currently supported","description_kind":"plain","optional":true},"mode":{"type":"string","description":"The mode to create the file or directory","description_kind":"plain","optional":true},"optional":{"type":"bool","description":"File is optional, dont fail if source does not exist","description_kind":"plain","optional":true},"path":{"type":"string","description":"The path to create the file or directory","description_kind":"plain","required":true},"source":{"type":"string","description":"The path to the source of the file","description_kind":"plain","optional":true},"symlink":{"type":"string","description":"The path to link to","description_kind":"plain","optional":true},"uid":{"type":"number","description":"The uid of the file/directory owner","description_kind":"plain","optional":true},"uid_name":{"type":"string","description":"The uid name of the file/directory owner","description_kind":"plain","optional":true}},"description":"`linuxkit_file` is a file you would like to include in the finished system image.","description_kind":"plain"}},"linuxkit_image":{"version":0,"block":{"attributes":{"additional_gid_names":{"type":["list","string"],"description":"A list of additional group names for the process","description_kind":"plain","optional":true},"additional_gids":{"type":["list","number"],"description":"A list of additional groups for the process","description_kind":"plain","optional":true},"ambient":{"type":["list","string"],"description":"The Linux ambient capabilities (capabilities passed to non root users) that are required","description_kind":"plain","optional":true},"annotations":{"type":["list","string"],"description":"The map of key value pairs as OCI metadata","description_kind":"plain","optional":true},"binds":{"type":["list","string"],"description":"A Simpler interface to specify bind mounts, accepting a string like /src:/dest:opt1,opt2","description_kind":"plain","optional":true},"capabilities":{"type":["list","string"],"description":"The Linux capabilities required, for example CAP_SYS_ADMIN, if there is a single capability 'all' then all capabilities are added","description_kind":"plain","optional":true},"cgroups_path":{"type":"string","description":"The path for cgroups","description_kind":"plain","optional":true},"command":{"type":["list","string"],"description":"This will override the command and entrypoint in the image with a new list of commands","description_kind":"plain","optional":true},"cwd":{"type":"string","description":"The working directory, defaults to /","description_kind":"plain","optional":true},"env":{"type":["list","string"],"description":"This will override the environment in the image with a new environment list. Specify variables as VAR=value","description_kind":"plain","optional":true},"gid":{"type":"number","description":"The group id of the process","description_kind":"plain","optional":true},"gid_name":{"type":"string","description":"The group name of the process","description_kind":"plain","optional":true},"hostname":{"type":"string","description":"The hostname inside the image","description_kind":"plain","optional":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"image":{"type":"string","description":"The Docker image to use for the filesystem","description_kind":"plain","required":true},"ipc":{"type":"string","description":"The ipc namespace, either to a path, or if new is specified it will use a new namespace","description_kind":"plain","optional":true},"masked_paths":{"type":["list","string"],"description":"The paths which should be hidden","description_kind":"plain","optional":true},"name":{"type":"string","description":"A unique name for the program being executed, used as the containerd id","description_kind":"plain","required":true},"net":{"type":"string","description":"The network namespace, either to a path, or if none or new is specified it will use a new namespace","description_kind":"plain","optional":true},"no_new_privileges":{"type":"bool","description":"If set to true means no additional capabilities can be acquired and suid binaries do not work","description_kind":"plain","optional":true},"oom_score_adj":{"type":"number","description":"This changes the OOM score","description_kind":"plain","optional":true},"pid":{"type":"string","description":"The pid namespace, either to a path, or if host is specified it will use the host namespace","description_kind":"plain","optional":true},"readonly":{"type":"bool","description":"The root filesystem to read only, and changes the other default filesystems to read only","description_kind":"plain","optional":true},"readonly_paths":{"type":["list","string"],"description":"The paths which should be read only","description_kind":"plain","optional":true},"rlimits":{"type":["list","string"],"description":"The list of rlimit values in the form name,soft,hard, eg nofile,100,200. You can use unlimited as a value too","description_kind":"plain","optional":true},"rootfs_propagation":{"type":"string","description":"The rootfs propagation, eg shared, slave or (default) private","description_kind":"plain","optional":true},"sysctl":{"type":["map","string"],"description":"The map of sysctl key value pairs that are set inside the container namespace","description_kind":"plain","optional":true},"tmpfs":{"type":["list","string"],"description":"A simpler interface to mount a tmpfs, like --tmpfs in Docker, taking /dest:opt1,opt2","description_kind":"plain","optional":true},"uid":{"type":"number","description":"The user id of the process","description_kind":"plain","optional":true},"uid_name":{"type":"string","description":"The user name of the process","description_kind":"plain","optional":true},"uts":{"type":"string","description":"The uts namespace, either to a path, or if new is specified it will use a new namespace","description_kind":"plain","optional":true}},"block_types":{"gid_mappings":{"nesting_mode":"list","block":{"attributes":{"container_id":{"type":"number","description":"The starting GID in the container","description_kind":"plain","optional":true},"host_id":{"type":"number","description":"The starting GID on the host to be mapped to 'ContainerID'","description_kind":"plain","optional":true},"size":{"type":"number","description":"The number of IDs to be mapped","description_kind":"plain","optional":true}},"description":"(Experemental) gid mappings for user namespaces","description_kind":"plain"}},"mounts":{"nesting_mode":"list","block":{"attributes":{"destination":{"type":"string","description":"The destination path of the mount","description_kind":"plain","optional":true},"options":{"type":["list","string"],"description":"The fstab style mount options","description_kind":"plain","optional":true},"source":{"type":"string","description":"The source path of the mount","description_kind":"plain","optional":true},"type":{"type":"string","description":"The mount kind","description_kind":"plain","required":true}},"description":"The full form for specifying a mount, which requires type, source, destination and a list of options","description_kind":"plain"}},"resources":{"nesting_mode":"list","block":{"block_types":{"block_io":{"nesting_mode":"list","block":{"attributes":{"leaf_weight":{"type":"number","description":"The tasks' weight in the given cgroup while competing with the cgroup's child cgroups, CFQ scheduler only","description_kind":"plain","optional":true},"weight":{"type":"number","description":"The per cgroup weight","description_kind":"plain","optional":true}},"block_types":{"throttle_read_bps_device":{"nesting_mode":"list","block":{"attributes":{"rate":{"type":"number","description":"The IO rate limit per cgroup per device","description_kind":"plain","optional":true}},"description":"IO read rate limit per cgroup per device, bytes per second","description_kind":"plain"}},"throttle_read_iops_device":{"nesting_mode":"list","block":{"attributes":{"rate":{"type":"number","description":"The IO rate limit per cgroup per device","description_kind":"plain","optional":true}},"description":"IO read rate limit per cgroup per device, IO per second","description_kind":"plain"}},"throttle_write_bps_device":{"nesting_mode":"list","block":{"attributes":{"rate":{"type":"number","description":"The IO rate limit per cgroup per device","description_kind":"plain","optional":true}},"description":"IO write rate limit per cgroup per device, bytes per second","description_kind":"plain"}},"throttle_write_iops_device":{"nesting_mode":"list","block":{"attributes":{"rate":{"type":"number","description":"The IO rate limit per cgroup per device","description_kind":"plain","optional":true}},"description":"IO read rate limit per cgroup per device, IO per second","description_kind":"plain"}},"weight_device":{"nesting_mode":"list","block":{"attributes":{"leaf_weight":{"type":"number","description":"The tasks' weight in the given cgroup while competing with the cgroup's child cgroups, CFQ scheduler only","description_kind":"plain","optional":true},"weight":{"type":"number","description":"The weight is the bandwidth rate for the device","description_kind":"plain","optional":true}},"description":"The weight per cgroup per device, can override BlkioWeight","description_kind":"plain"}}},"description":"The BlockIO restriction configuration","description_kind":"plain"},"max_items":1},"cpu":{"nesting_mode":"list","block":{"attributes":{"cpus":{"type":"string","description":"CPUs to use within the cpuset","description_kind":"plain","optional":true},"mems":{"type":"string","description":"List of memory nodes in the cpuset","description_kind":"plain","optional":true},"period":{"type":"number","description":"CPU period to be used for hardcapping in usecs","description_kind":"plain","optional":true},"quota":{"type":"number","description":"CPU hardcap limit in usecs","description_kind":"plain","optional":true},"realtime_period":{"type":"number","description":"CPU period to be used for realtime scheduling in usecs","description_kind":"plain","optional":true},"realtime_runtime":{"type":"number","description":"How much time realtime scheduling may use in usecs","description_kind":"plain","optional":true},"shares":{"type":"number","description":"CPU shares (relative weight vs. other cgroups with cpu shares)","description_kind":"plain","optional":true}},"description":"The CPU restriction configuration","description_kind":"plain"},"max_items":1},"devices":{"nesting_mode":"list","block":{"attributes":{"access":{"type":"string","description":"Cgroup access permissions format, rwm","description_kind":"plain","optional":true},"allow":{"type":"bool","description":"Allow or deny device","description_kind":"plain","required":true},"major":{"type":"number","description":"The device's major number","description_kind":"plain","optional":true},"minor":{"type":"number","description":"The device's minor number","description_kind":"plain","optional":true},"type":{"type":"string","description":"The device type, block, char, etc","description_kind":"plain","optional":true}},"description":"This configures the device whitelist","description_kind":"plain"}},"hugepage_limits":{"nesting_mode":"list","block":{"attributes":{"limit":{"type":"number","description":"The limit of 'hugepagesize' hugetlb usage","description_kind":"plain","optional":true},"page_size":{"type":"string","description":"The hugepage size","description_kind":"plain","optional":true}},"description":"Hugetlb limit (in bytes)","description_kind":"plain"}},"memory":{"nesting_mode":"list","block":{"attributes":{"disable_oom_killer":{"type":"bool","description":"This disables the OOM killer for out of memory conditions","description_kind":"plain","optional":true},"kernel":{"type":"number","description":"The kernel memory limit (in bytes)","description_kind":"plain","optional":true},"kernel_tcp":{"type":"number","description":"The kernel memory limit for tcp (in bytes)","description_kind":"plain","optional":true},"limit":{"type":"number","description":"The memory limit (in bytes)","description_kind":"plain","optional":true},"reservation":{"type":"number","description":"The memory reservation or soft_limit (in bytes)","description_kind":"plain","optional":true},"swap":{"type":"number","description":"The total memory limit (memory + swap)","description_kind":"plain","optional":true},"swappiness":{"type":"number","description":"How aggressive the kernel will swap memory pages","description_kind":"plain","optional":true}},"description":"The memory restriction configuration","description_kind":"plain"},"max_items":1},"network":{"nesting_mode":"list","block":{"attributes":{"class_id":{"type":"number","description":"The class identifier for container's network packets","description_kind":"plain","optional":true}},"block_types":{"priorities":{"nesting_mode":"list","block":{"attributes":{"name":{"type":"string","description":"The name of the network interface","description_kind":"plain","optional":true},"priority":{"type":"number","description":"The priority for the interface","description_kind":"plain","optional":true}},"description":"The priority of network traffic for container","description_kind":"plain"}}},"description":"The network restriction configuration","description_kind":"plain"},"max_items":1},"pids":{"nesting_mode":"list","block":{"attributes":{"limit":{"type":"number","description":"Maximum number of PIDs","description_kind":"plain","optional":true}},"description":"The task resource restriction configuration","description_kind":"plain"},"max_items":1}},"description":"The cgroup resource limits as per the OCI spec","description_kind":"plain"},"max_items":1},"runtime":{"nesting_mode":"list","block":{"attributes":{"cgroups":{"type":["list","string"],"description":"A list of cgroups that will be created before the container is run","description_kind":"plain","optional":true},"mkdir":{"type":["list","string"],"description":"A list of directories to create at runtime, in the root mount namespace","description_kind":"plain","optional":true},"namespace":{"type":"string","description":"Overrides the LinuxKit default containerd namespace to put the container in; only applicable to services","description_kind":"plain","optional":true}},"block_types":{"bind_ns":{"nesting_mode":"list","block":{"attributes":{"cgroups":{"type":"string","description_kind":"plain","optional":true},"ipc":{"type":"string","description_kind":"plain","optional":true},"mnt":{"type":"string","description_kind":"plain","optional":true},"net":{"type":"string","description_kind":"plain","optional":true},"pid":{"type":"string","description_kind":"plain","optional":true},"user":{"type":"string","description_kind":"plain","optional":true},"uts":{"type":"string","description_kind":"plain","optional":true}},"description":"Specifies a namespace type and a path where the namespace from the container being created will be bound. This allows a namespace to be set up in an onboot container, and then using net: path for a service container to use that network namespace later","description_kind":"plain"}},"interfaces":{"nesting_mode":"list","block":{"attributes":{"add":{"type":"string","description":"The type of interface to be created in the containers namespace, with the specified name","description_kind":"plain","optional":true},"create_in_root":{"type":"bool","description":"The interface being added should be created in the root namespace first, then moved. This is needed for wireguard interfaces","description_kind":"plain","optional":true},"name":{"type":"string","description":"The name of an interface. An existing interface with this name will be moved into the container's network namespace","description_kind":"plain","optional":true},"peer":{"type":"string","description":"The name of the other end when creating a veth interface. This end will remain in the root namespace, where it can be attached to a bridge. Specifying this implies add: veth","description_kind":"plain","optional":true}},"description":"A list of mount specifications","description_kind":"plain"}},"mounts":{"nesting_mode":"list","block":{"attributes":{"destination":{"type":"string","description":"The destination directory to mount onto","description_kind":"plain","optional":true},"options":{"type":["list","string"],"description":"The options to use when mounting the directory","description_kind":"plain","optional":true},"source":{"type":"string","description":"The source for the directory you want to mount","description_kind":"plain","optional":true},"type":{"type":"string","description":"The type of the mount","description_kind":"plain","optional":true}},"description":"A list of mount specifications ","description_kind":"plain"}}},"description":"Actions to take place when the container is being started","description_kind":"plain"}},"uid_mappings":{"nesting_mode":"list","block":{"attributes":{"container_id":{"type":"number","description":"The starting UID in the container","description_kind":"plain","optional":true},"host_id":{"type":"number","description":"The starting UID on the host to be mapped to 'ContainerID'","description_kind":"plain","optional":true},"size":{"type":"number","description":"The number of IDs to be mapped","description_kind":"plain","optional":true}},"description":"(Experemental) uid mappings for user namespaces","description_kind":"plain"}}},"description":"`linuxkit_image` is a single image to be included in the system.","description_kind":"plain"}},"linuxkit_init":{"version":0,"block":{"attributes":{"containers":{"type":["list","string"],"description":"Containers to mount on the root filesystem","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true}},"description":"`linuxkit_init` defines the configuration section for init containers.","description_kind":"plain"}},"linuxkit_kernel":{"version":0,"block":{"attributes":{"binary":{"type":"string","description":"Name of the kernel file that will be booted","description_kind":"plain","optional":true},"cmdline":{"type":"string","description":"Kernel command line options if required.","description_kind":"plain","optional":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"image":{"type":"string","description":"The Docker image which should contain a kernel file that will be booted","description_kind":"plain","required":true},"tar":{"type":"string","description":"Name of tarball that unpacked into the root.","description_kind":"plain","optional":true},"ucode":{"type":"string","description":"Name of cpio archive containing CPU microcode which needs prepending to the initrd.","description_kind":"plain","optional":true}},"description":"`linuxkit_kernel` is a single kernel to be included in a `linuxkit_config`.","description_kind":"plain"}},"linuxkit_metadata":{"version":0,"block":{"attributes":{"base_path":{"type":"string","description":"The base path to use when building an archive.","description_kind":"plain","required":true},"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"json":{"type":"string","description":"The packed version of the input file tree","description_kind":"plain","computed":true}},"description":"`linuxkit_metadata` data source can be used to convert a directory structure rooted at `base_path` and return it as a JSON formatted string.  Be aware that while linuxkit will parse an arbitrary size of metadata, most cloud providers limit this data.","description_kind":"plain"}},"linuxkit_trust":{"version":0,"block":{"attributes":{"id":{"type":"string","description_kind":"plain","optional":true,"computed":true},"image":{"type":["list","string"],"description":"Images to trust","description_kind":"plain","optional":true},"org":{"type":["list","string"],"description":"Orgs to trust","description_kind":"plain","optional":true}},"description":"`linuxkit_trust` is a set of images and organizations that should be trusted based on their docker notary signatures.","description_kind":"plain"}}}}}}
